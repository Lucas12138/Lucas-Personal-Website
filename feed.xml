<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https:///Lucas12138.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https:///Lucas12138.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-08-04T23:45:19-07:00</updated><id>https:///Lucas12138.github.io/feed.xml</id><title type="html">LUCAS LIU</title><subtitle>Addicted to the world
</subtitle><author><name>Lucas Liu</name><email>lucasliu12138@gmail.com</email></author><entry><title type="html">Blog Migration - From Wordpress To Jekyll</title><link href="https:///Lucas12138.github.io/2019/04/17/wordpress-to-jekyll-migration/" rel="alternate" type="text/html" title="Blog Migration - From Wordpress To Jekyll" /><published>2019-04-17T14:47:51-07:00</published><updated>2019-04-17T14:47:51-07:00</updated><id>https:///Lucas12138.github.io/2019/04/17/wordpress-to-jekyll-migration</id><content type="html" xml:base="https:///Lucas12138.github.io/2019/04/17/wordpress-to-jekyll-migration/">&lt;p&gt;Contents&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Introduction&lt;/li&gt;
  &lt;li&gt;Migration steps
    &lt;ul&gt;
      &lt;li&gt;1. Use the exporter plugin (on Wordpress admin page)&lt;/li&gt;
      &lt;li&gt;2. Install the jekyll&lt;/li&gt;
      &lt;li&gt;3. Find a cool theme&lt;/li&gt;
      &lt;li&gt;4. Follow the theme’s README instructions and set up Github pages&lt;/li&gt;
      &lt;li&gt;5. Copy the posts from the export folder to the new local Jekyll repo&lt;/li&gt;
      &lt;li&gt;6. Make some changes to the starting template&lt;/li&gt;
      &lt;li&gt;7. Update the posts&lt;/li&gt;
      &lt;li&gt;8. Bind to the DNS (using AWS Route 53 in my case)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Wordpress and Jekyll are both very handy tools to manage contents. But, they do share some differences.&lt;/p&gt;

&lt;p&gt;Wordpress is more sophisticated and easier to use. The user can create contents, administrate the website, or use&lt;/p&gt;

&lt;p&gt;all kinds of plugins via the portal. However, the deployment of a Wordpress based blog website could be more difficult.&lt;/p&gt;

&lt;p&gt;People usually use the LAMP stack (Linux, Apache, MySQL and PHP) to host the Wordpress. Therefore, users need to find&lt;/p&gt;

&lt;p&gt;some servers to deploy the blog service, such as AWS EC2. Then, some extra costs occur. A t2.micro(with EBS) on AWS could cost less than $10 per month.&lt;/p&gt;

&lt;p&gt;Jekyll requires writing some markdown, HTML, or &lt;a href=&quot;https://jekyllrb.com/docs/liquid/&quot;&gt;Liquid&lt;/a&gt;. Although it has some templates,&lt;/p&gt;

&lt;p&gt;it’s slightly more difficult to use. However, it’s very easy to deploy. For example, you can deploy the Jekyll based blog&lt;/p&gt;

&lt;p&gt;via Github pages for free.&lt;/p&gt;

&lt;h1 id=&quot;migration-steps&quot;&gt;Migration steps&lt;/h1&gt;

&lt;h2 id=&quot;1-use-the-exporter-plugin-on-wordpress-admin-page&quot;&gt;1. Use the exporter plugin (on Wordpress admin page)&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/benbalter/wordpress-to-jekyll-exporter&quot;&gt;exporter plugin&lt;/a&gt; is just like other Wordpress plugins.&lt;/p&gt;

&lt;p&gt;Follow the plugin instructions. You will be able to download a zip file. The exporter will convert your Wordpress page into a vanilla Jekyll page.&lt;/p&gt;

&lt;h2 id=&quot;2-install-the-jekyll&quot;&gt;2. Install the jekyll&lt;/h2&gt;

&lt;p&gt;The steps of the installation vary among different systems. You can refer to the instruction &lt;a href=&quot;https://jekyllrb.com/docs/installation/macos/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note:&lt;/p&gt;

&lt;p&gt;The steps of installing Jekyll on Mac didn’t work perfectly on my machine.&lt;/p&gt;

&lt;p&gt;The following command worked for me.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-aidl&quot;&gt;sudo gem install -n /usr/local/bin jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;3-find-a-cool-theme&quot;&gt;3. Find a cool theme&lt;/h2&gt;

&lt;p&gt;People want a cool UI. It worth spending some time searching for one.&lt;/p&gt;

&lt;p&gt;You can use the following websites to find one.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/planetjekyll/awesome-jekyll-themes&lt;/li&gt;
  &lt;li&gt;https://jekyllthemes.io/jekyll-blog-themes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m using &lt;a href=&quot;https://hydejack.com/&quot;&gt;Hydejack&lt;/a&gt; for my blog.&lt;/p&gt;

&lt;h2 id=&quot;4-follow-the-themes-readme-instructions-and-set-up-github-pages&quot;&gt;4. Follow the theme’s README instructions and set up Github pages&lt;/h2&gt;

&lt;p&gt;Usually, the themes have README instructions on how to set up the blog.&lt;/p&gt;

&lt;p&gt;You would need to use &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github pages&lt;/a&gt; for blog deployment as well.&lt;/p&gt;

&lt;h2 id=&quot;5-copy-the-posts-from-the-export-folder-to-the-new-local-jekyll-repo&quot;&gt;5. Copy the posts from the export folder to the new local Jekyll repo&lt;/h2&gt;

&lt;p&gt;In the zip file generated by the exporter, there’s a &lt;strong&gt;_post&lt;/strong&gt; and a &lt;strong&gt;wp-content&lt;/strong&gt; folder.&lt;/p&gt;

&lt;p&gt;You would like to replace the posts under the theme’s starter _post folder with the posts under the generated _post folder.&lt;/p&gt;

&lt;p&gt;You also need to copy the wp-content to the theme’s root folder.&lt;/p&gt;

&lt;h2 id=&quot;6-make-some-changes-to-the-starting-template&quot;&gt;6. Make some changes to the starting template&lt;/h2&gt;

&lt;p&gt;The default settings may not be good enough. You probably want to have some customization.&lt;/p&gt;

&lt;p&gt;For example, you can add a categories page, update the AUTHOR/ABOUT page, add some contact information etc.&lt;/p&gt;

&lt;h2 id=&quot;7-update-the-posts&quot;&gt;7. Update the posts&lt;/h2&gt;

&lt;p&gt;The generated posts may contain img tags with the source of your previous DNS.&lt;/p&gt;

&lt;p&gt;You need to update that to a local URL, {{site.baseurl}}.&lt;/p&gt;

&lt;h2 id=&quot;8-bind-to-the-dns-using-aws-route-53-in-my-case&quot;&gt;8. Bind to the DNS (using AWS Route 53 in my case)&lt;/h2&gt;

&lt;p&gt;I purchased my DNS via AWS. Therefore, I’m using AWS Route 53. Other service providers should share a similar approach.&lt;/p&gt;

&lt;p&gt;If you want to use AWS Route 53 with Github pages. You can refer to &lt;a href=&quot;https://samyounger.com/github/git/github-pages/aws/route53/2017/02/15/github-pages-with-aws.html&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;</content><author><name>Lucas</name></author><summary type="html">Contents</summary></entry><entry><title type="html">Some Notes on Spark – Data Engineering on the Cloud</title><link href="https:///Lucas12138.github.io/2019/03/02/some-notes-on-spark-data-engineering-on-the-cloud/" rel="alternate" type="text/html" title="Some Notes on Spark &amp;#8211; Data Engineering on the Cloud" /><published>2019-03-02T13:47:51-08:00</published><updated>2019-03-02T13:47:51-08:00</updated><id>https:///Lucas12138.github.io/2019/03/02/some-notes-on-spark-data-engineering-on-the-cloud</id><content type="html" xml:base="https:///Lucas12138.github.io/2019/03/02/some-notes-on-spark-data-engineering-on-the-cloud/">&lt;p&gt;The last time when I was using Spark was 1 year ago. I used that for a CMU cloud computing project. Although it has an interesting scenario, I didn’t get a chance to dive deeper into it. Currently, I picked it up again for a CMU advanced cloud computing project. This time, I would like to note down some interesting things that I spotted.&lt;/p&gt;

&lt;h1 id=&quot;1-the-scenario&quot;&gt;1. The scenario&lt;/h1&gt;

&lt;p&gt;For the ACC Spark project, it’s doing ETL on some large English files. The file is in WET format and around &lt;strong&gt;170MB&lt;/strong&gt;. We’re required to clean the data based on some specific rules. The instance we’re using is AWS EC2 m4.xlarge. The first part focused on correctness. It contains 2 tasks, which let us cleaning 1 file(using 4 slaves) and 50 files(using 8 slaves) respectively. In the second part, we’re aiming at improving the performance of the ETL. We need to clean &lt;strong&gt;1 file(sanity check, test A)&lt;/strong&gt;, &lt;strong&gt;100 files(using 8 slaves, test B)&lt;/strong&gt;, &lt;strong&gt;400 files (using 8 slaves, test C)&lt;/strong&gt;, &lt;strong&gt;400 files(using 16 slaves, test D)&lt;/strong&gt;. The ETL results will be some files on the master node, such as statistics, frequencies etc. and processed corpus files on HDFS.&lt;/p&gt;

&lt;h1 id=&quot;2-performance-tips&quot;&gt;2. Performance tips&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Simplify the logic. It’s simple to implement but hard to identify the bad workflows&lt;/li&gt;
  &lt;li&gt;Reduce the narrow dependencies and wide dependencies, especially wide dependencies. In other words, decrease the transformation steps. Wide dependencies are more costly. Because it requires information from all partitions&lt;/li&gt;
  &lt;li&gt;Use the least number of actions, e.g. collect, count. Spark is lazy. The transformation won’t really happen until there’s an action. More actions usually require more time to finish the tasks&lt;/li&gt;
  &lt;li&gt; Make good use of repartition. Repartition distributes the work to all the nodes. That’s one of the main reason why Spark can be faster than sequential programs. Usually, using 2-4 partitions per core is a good practice. However, calling repartition many times may introduce some network I/O cost. It’s good to have reasonable times of repartition. “spark.default.parallelism” is an important property for partitioning in Spark.&lt;/li&gt;
  &lt;li&gt;Persist or cache some RDDs generated in the middle of the processes. Spark is for iterative map-reduce. It’s highly possible that there will be some generated RDDs can be used for the latter process. It may save 10x time comparing to a solution that not persisting them. Note that the persist term in Spark may not actually persist it on disk. The default persistence level is in memory. But, it’s tunable. It could be on disk or partially on disk. It’s important to choose the persist level wisely. Only use memory may kill the slaves. Then it has to recompute some information. It may cost a large amount of time. If the memory is limited, persisting it on disk can be effective too.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;3-workflow-diagram&quot;&gt;3. Workflow diagram&lt;/h1&gt;

&lt;p&gt;&lt;img class=&quot;wp-image-268 alignnone&quot; src=&quot;/wp-content/uploads/2019/03/acc-spark-etl-workflow-300x249.png&quot; alt=&quot;&quot; width=&quot;478&quot; height=&quot;397&quot; srcset=&quot;/wp-content/uploads/2019/03/acc-spark-etl-workflow-300x249.png 300w, /wp-content/uploads/2019/03/acc-spark-etl-workflow-768x638.png 768w, /wp-content/uploads/2019/03/acc-spark-etl-workflow.png 930w&quot; sizes=&quot;(max-width: 478px) 100vw, 478px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Based on the ETL requirements and the performance tips, the ETL application was split into 4 jobs. They’re mapping to the &lt;strong&gt;count&lt;/strong&gt;, &lt;strong&gt;collectAsMap&lt;/strong&gt;, &lt;strong&gt;collect&lt;/strong&gt;, &lt;strong&gt;saveAsTextFile&lt;/strong&gt; actions respectively.&lt;/p&gt;

&lt;p&gt;Before I arrived at this solution, I attempted collecting a very large RDD only once to reduce the number of collections. However, it led to memory issues. Besides, that approach required to do all the logic inside the master node. It’s not efficient as well. The time spent is not only related to the number of actions but also the size of data collected and how much of the work is handled in parallel.&lt;/p&gt;

&lt;p&gt;Persist method was quite handy. We can avoid calculating same RDD multiple times and that would save us a lot of time. Clearly, in the diagram, we have 2 RDDs are used more than once. Therefore, we can persist them to speed up the process.&lt;/p&gt;

&lt;h1 id=&quot;4-project-outcome&quot;&gt;4. Project outcome&lt;/h1&gt;

&lt;p&gt;The solution mentioned above achieved very good performance. The performance targets for test case B, C, D are &lt;strong&gt;25min, 80min, 45min&lt;/strong&gt;. My spark application finished them in &lt;strong&gt;12min, 43min, 24min&lt;/strong&gt;. Its performance for test case C ranked #1 among 110 students.&lt;/p&gt;</content><author><name>Lucas</name></author><summary type="html">The last time when I was using Spark was 1 year ago. I used that for a CMU cloud computing project. Although it has an interesting scenario, I didn’t get a chance to dive deeper into it. Currently, I picked it up again for a CMU advanced cloud computing project. This time, I would like to note down some interesting things that I spotted.</summary></entry><entry><title type="html">17-682 Java EE Web Application</title><link href="https:///Lucas12138.github.io/2018/11/05/17-682-java-ee-web-application/" rel="alternate" type="text/html" title="17-682 Java EE Web Application" /><published>2018-11-04T17:36:35-08:00</published><updated>2018-11-04T17:36:35-08:00</updated><id>https:///Lucas12138.github.io/2018/11/05/17-682-java-ee-web-application</id><content type="html" xml:base="https:///Lucas12138.github.io/2018/11/05/17-682-java-ee-web-application/">&lt;div id=&quot;toc_container&quot; class=&quot;no_bullets&quot;&gt;
  &lt;p class=&quot;toc_title&quot;&gt;
    Contents
  &lt;/p&gt;
  
  &lt;ul class=&quot;toc_list&quot;&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Introduction&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;1&lt;/span&gt; Introduction&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Concepts&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;2&lt;/span&gt; Concepts&lt;/a&gt;&lt;ul&gt;
        &lt;li&gt;
          &lt;a href=&quot;#HTTP_HTML_CSS_and_Javascript&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.1&lt;/span&gt; HTTP, HTML, CSS and Javascript&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Servlets_Tomcats&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.2&lt;/span&gt; Servlets &amp;amp; Tomcats&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Threads&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.3&lt;/span&gt; Threads&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Cookies_Sessions&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.4&lt;/span&gt; Cookies &amp;amp; Sessions&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#SQL_JDBC&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.5&lt;/span&gt;  SQL &amp;amp; JDBC&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#ORM_object-relational_mapping&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.6&lt;/span&gt; ORM (object-relational mapping)&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Transactions&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.7&lt;/span&gt; Transactions&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#MVC_model_view_controller&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.8&lt;/span&gt; MVC (model view controller)&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Tag_Libraries&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.9&lt;/span&gt; Tag Libraries&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#AJAX_asynchronous_javascript_and_XML&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.10&lt;/span&gt; AJAX (asynchronous javascript and XML)&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Security&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.11&lt;/span&gt; Security&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Cloud&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.12&lt;/span&gt; Cloud&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
      &lt;a href=&quot;#Practice&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;3&lt;/span&gt; Practice&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;

&lt;h1 id=&quot;introduction&quot;&gt;&lt;span id=&quot;Introduction&quot;&gt;Introduction&lt;/span&gt;&lt;/h1&gt;

&lt;p&gt;It’s another very good course led by &lt;a href=&quot;http://www.jeffeppinger.com/jle/&quot;&gt;Jeff Eppinger&lt;/a&gt;. Before learning this course, my knowledge about web application development is not very structural. This very interesting course guided me through the concepts of HTML, javascript, CSS, threads, cookies, sessions, JSP, JDBC, ORM, transactions, MVC, tag libraries, AJAX, security, and cloud deployment. It provides me a structural understanding of how to build a basic java web application.&lt;/p&gt;

&lt;h1 id=&quot;concepts&quot;&gt;&lt;span id=&quot;Concepts&quot;&gt;Concepts&lt;/span&gt;&lt;/h1&gt;

&lt;h2 id=&quot;http-html-css-and-javascript&quot;&gt;&lt;span id=&quot;HTTP_HTML_CSS_and_Javascript&quot;&gt;HTTP, HTML, CSS and Javascript&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;SaaS (software as a service) web application is not a new thing now. But, the trend is getting more obvious that web application is taking over the desktop software. For example, Google doc is very popular now and many people prefer it to Microsoft office.&lt;/p&gt;

&lt;p&gt;There’re 2 basic kinds of web contents, static and dynamic. Although they’re 2 very different concepts, they often come hand-in-hand. Static content means the view will be the same across all the users. Dynamic content means it won’t remain constant. It will differ given different users or different inputs. To evolve from static content to dynamic content, we need at least 4 items. Firstly, we need to generate HTML with scripts or programs. Secondly, it should be able to access and update data. Thirdly, handling concurrency issues is important. Synchronization and transactions will be helpful. Last but not least, we need tools and techniques to make it easy to manage, such as MVC patterns, frameworks, IDEs etc.&lt;/p&gt;

&lt;p&gt;In most cases, the connection will be maintained via IP stack as below:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-211&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-2.30.19-PM-300x192.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;192&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-2.30.19-PM-300x192.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-2.30.19-PM.png 424w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To interact with web applications, the most common approach is using the browser. So what is exactly a browser? Or what methods will it provide? A browser can manage protocol, such as http and ftp. It’s a HTML rendering engine so that we can see the beautiful pages. It can do caching, has support for javascript and java applets and it has the OS integration or interface.&lt;/p&gt;

&lt;p&gt;Most web applications are based on http protocol. URI will specify the resources to be accessed. The http connection is under TCP and on port 80 by default. There’re 3 kinds of common request methods.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Safe methods have no side effects(or aren’t supposed to ): GET, HEAD, TRACE and OPTIONS&lt;/li&gt;
  &lt;li&gt;Idempotent methods(in simple words: methods will have same effects after the first request): PUT and DELETE&lt;/li&gt;
  &lt;li&gt;Update method: POST&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GET and POST methods can pass parameters and are most commonly used. For more details: &lt;a href=&quot;https://www.tutorialspoint.com/http/http_methods.htm&quot;&gt;HTTP methods.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The request and response really need an address to go to, just like you need to put the address when you mail to your friend. Briefly, there’re 3 layers of addresses:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Low level, hardware address: MAC address&lt;/li&gt;
  &lt;li&gt;Routable address: IP address&lt;/li&gt;
  &lt;li&gt;High level, logical address: DNS hostname&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Requests all need a port number to locate the application. Generally, Telnet=&amp;gt;23, SMTP=&amp;gt;25, RDP=&amp;gt;3389, and for production, HTTP=&amp;gt;80, SSL=&amp;gt;443, MySQL=&amp;gt;3306, for development, HTTP=&amp;gt;8080, SSL=&amp;gt;8443&lt;/p&gt;

&lt;p&gt;Apache and Nginx are the most popular web servers. For Apache, there’re some important directories, such as document root, audit root, configuration root, and CGI-bin root. (CGI, common gateway interface, provides a protocol for web servers to execute programs).&lt;/p&gt;

&lt;p&gt;Here’re some common admistration considerations for HTTP servers:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-213&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-7.56.48-PM-300x244.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;244&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-7.56.48-PM-300x244.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-7.56.48-PM.png 469w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;HTML is the document that HTTP uses most. By definition, HTML, hyper-text markup language, is a device independent way to represents documents. It can specify the format in the document, like titles, paragraphs, colors etc. It can also include reference documents, such as images, applets etc. Form is a very important component, which translate user input into HTTP requests to the specific URI. XHTML is an standardization of HTML. It’s more restrictive and easier to parse and process. HTML5 is the new version of HTML. It provides better support for medias, like audio and video and has removed the legacy elements. Here’s a comparasion in details: &lt;a href=&quot;https://hackr.io/blog/difference-between-html-html5-xhtml&quot;&gt;HTML vs. XHTML vs HTML5.&lt;/a&gt; Another very important thing is &lt;strong&gt;HTML only support GET and POST&lt;/strong&gt;. If method is not specified in the html, GET is by default (without javascript involved). You cannot trust any HTML, because javascript can change the behavior.&lt;/p&gt;

&lt;p&gt;The goal of CSS (cascading style sheets) is the separation of document structure and formatting. We should use HTML for document structure and CSS for formatting. CSS can specify or override the style of elements. Ususally, it can modify the formatting of fonts, hrefs, tables, hover etc. The CSS structure is key value pairs, &lt;name&gt;: &lt;value&gt;. It can be defined in-line using &amp;#8220;style&amp;#8221; attribute, in the HTML header or a separate file. CSS selector is a way to aggregate style pairs for a element, class or ID.&lt;img class=&quot;alignnone size-medium wp-image-215&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-8.33.08-PM-300x189.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;189&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-8.33.08-PM-300x189.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-8.33.08-PM.png 551w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/value&gt;&lt;/name&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;div&amp;gt; and &amp;lt;span&amp;gt; are tags, which do nothing except adding style to the content. The difference between them is &amp;lt;div&amp;gt; will break lines and &amp;lt;span&amp;gt; is in-line. For more details of CSS: &lt;a href=&quot;https://www.w3schools.com/css/&quot;&gt;CSS resources.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Javascript is interpreted (no need to compile) and loosely/dynamically typed. The functions in javascript are also objects, which can also have properties. It can be defined as the content in the &amp;lt;script&amp;gt; tag or a separate file. HTML can have javascript events, such as onload, &lt;span style=&quot;font-size: 1rem;&quot;&gt;onclick, &lt;/span&gt;&lt;span style=&quot;color: inherit; font-size: inherit;&quot;&gt;onfocus, onblur, onmouseover etc. Those can invoke javascript methods when they’re triggered.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;DOM (document object model) is a tree of nodes represent the HTML document. It contains 3 kinds of nodes: element, attribute and text. Fields can be used to retrieve related nodes, e.g. parentNode, firstChild, lastChild, childNodes, nextSibling, previousSibling. Methods can be applied to change the element, such as appendChild(), removeChild(), modifying attributes like onclick, href, style.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-216&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-8.47.34-PM-300x149.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;149&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-8.47.34-PM-300x149.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-24-at-8.47.34-PM.png 597w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The document object is a predefined javascript variable and the root of the tree. It has some useful methods and variables: getElementById(),getElementsByName(),getElementsByTagName(), URL, cookie.&lt;/p&gt;

&lt;h2 id=&quot;servlets--tomcats&quot;&gt;&lt;span id=&quot;Servlets_Tomcats&quot;&gt;Servlets &amp;amp; Tomcats&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;A reason that many people love Java is that it’s such a flexiable and adaptabel language that can almost run in all environments, terminal, IDE, browsers(applet), web servers(servlets) and even electronic cards. As long as there’s JVM, Java should be able to function.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-219&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.34.34-PM-300x153.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;153&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.34.34-PM-300x153.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.34.34-PM.png 499w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Java in Browsers (applets)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone wp-image-218&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.34.40-PM-300x185.png&quot; alt=&quot;&quot; width=&quot;418&quot; height=&quot;258&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.34.40-PM-300x185.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.34.40-PM.png 498w&quot; sizes=&quot;(max-width: 418px) 100vw, 418px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Java in Web Servers (servlets)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Although applets will work in some cases, people are using more servlets that applets. There’re some reasons for this.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Applets may lead to java version issue. It need to make sure the JVM in the browser can run the class file sent from the server.&lt;/li&gt;
  &lt;li&gt;Some large applications can have very large class files. It’s not effective to send such a large amount of data.&lt;/li&gt;
  &lt;li&gt;In terms of accessing data on the server, servlets provide efficiency and security.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, Tomcat is a standing by web container that handle requests and make responses. Some key packages are javax.servlet and javax.servlet.http, which is in &lt;em&gt;$CATALINA_ROOT/lib/servlet-api.jar&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;javax.servlet.Servlet is an Interface has the following methods:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone wp-image-220&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.52.11-PM-300x165.png&quot; alt=&quot;&quot; width=&quot;389&quot; height=&quot;214&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.52.11-PM-300x165.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-10.52.11-PM.png 592w&quot; sizes=&quot;(max-width: 389px) 100vw, 389px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;javax.servlet.GenericServlet implements the Servlet interface and makes it easier to build customized servlets over different protocols. For HTTP, tomcat has already built one based on GenericServlet for us, which is javax.servlet.http.HttpServlet (extending the GenericServlet class). Here’re some methods for your servlets (if extending HttpServlet) to override:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-221&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-11.09.23-PM-300x87.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;87&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-11.09.23-PM-300x87.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-25-at-11.09.23-PM.png 494w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;javax.servlet.http.HttpServletRequest is the interface for the http requests. There’re some common methods that are good to know: &lt;strong&gt;getHeaderNames(), getHeader(name), getQueryString(), 
getParameterNames(), getParameter(name), getCookie(), getSession()&lt;/strong&gt; etc.&lt;/p&gt;

&lt;p&gt;Similarly, javax.servlet.http.HttpServletResponse is the interface for http responses. Some selected methods are: &lt;strong&gt;setContentType(), getWriter(), getOutputStream(), sendError(statusCode), sendRedirect(url), addCookie(cookie)&lt;/strong&gt; etc.&lt;/p&gt;

&lt;p&gt;Now, let’s talk about the structure of a web application. &lt;strong&gt;WebContent&lt;/strong&gt; is the folder holding pretty much everything. If you put the HTML files directly under WebContent, it will be publicly accessible by default. There’re 2 folders in the WebContent, &lt;strong&gt;META-INF&lt;/strong&gt; and &lt;strong&gt;WEB-INF&lt;/strong&gt; (some people say INF stands for information). META-INF is a list of content related to jar files. It’s like metadata. Usually, we don’t need to touch things in this folder. WEB-INF is very important. It contains the JAR dependencies(under lib directory), class files, and a deployment descriptor file &lt;strong&gt;web.xml&lt;/strong&gt;. Some information can be set in the web.xml as parameters. web.xml can specify the url-pattern using servlet-mapping. It can also describe the welcome page etc. It’s very important.&lt;/p&gt;

&lt;p&gt;In terms of tomcat administration, it has a manage interface(home page), XML files in conf and WEB_INF and $CATALINA_HOME/logs. The logs mainly have 3 types:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;stdout*.log&lt;/strong&gt; contains System.out output&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;manager*.log&lt;/strong&gt; output from Manager app&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;catalina*.log&lt;/strong&gt; info on apps loaded&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The web application can be easily exported by any modern IDE as a war file. The IDE can run the war file directly. But, the war file can be easily deployed to a tomcat container without IDE as well. It only need 2 steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Copy the war to $CATALINA_HOME/webapps&lt;/li&gt;
  &lt;li&gt;Run startup.sh / shutdown.sh in $CATALINA_HOME/bin&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;threads&quot;&gt;&lt;span id=&quot;Threads&quot;&gt;Threads&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Tomcat uses multiple threads to treat threads. Each request will start a thread. 2 threads with local variables referencing same object will share the object. When dealing with threads, it’s good to think of the variable type. It could be class variables, instance variables, and local variables. When different threads are working on shared resources, race condition may happen. Common shared resourse are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Instance variables (of shared instances of a class)&lt;/li&gt;
  &lt;li&gt;Class variables&lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;page&quot; title=&quot;Page 16&quot;&gt;
  &lt;div class=&quot;section&quot;&gt;
    &lt;div class=&quot;layoutArea&quot;&gt;
      &lt;div class=&quot;column&quot;&gt;
        &lt;p&gt;
          OS or DB resources (files, network, database)
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To help tackle this problem, keyword &lt;em&gt;synchronized&lt;/em&gt; helps. The synchronized statement can be used on any object (or on a method declaration). Then only one thread at a time will be able to access the object, code block or method.&lt;/p&gt;

&lt;p&gt;In tomcat, &lt;a href=&quot;https://tomcat.apache.org/tomcat-4.1-doc/config/coyote.html&quot;&gt;Coyote connector&lt;/a&gt; is used to manage connections, thread pool etc. A pool of threads helps save the time to instantiate the threads and garbage collect the finished threads. It pre-instantiates a pool of threads. When a requests come, it will dispatch one thread to process the request. It can be configured in &lt;strong&gt;conf/server.xml&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone wp-image-223&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-8.42.56-PM-300x51.png&quot; alt=&quot;&quot; width=&quot;324&quot; height=&quot;55&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-8.42.56-PM-300x51.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-8.42.56-PM.png 557w&quot; sizes=&quot;(max-width: 324px) 100vw, 324px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When the code logic involves copying objects, we need to be more careful on the concurrency issues. We used use defensive copy: choose whether to use &lt;a href=&quot;https://www.geeksforgeeks.org/deep-shallow-lazy-copy-java-examples/&quot;&gt;shallow copy or deep copy&lt;/a&gt;. It is not only necessary for multithreading scenarios. A not very defensive copy constantly leads to bugs in many other scenarios as well.&lt;/p&gt;

&lt;h2 id=&quot;cookies--sessions&quot;&gt;&lt;span id=&quot;Cookies_Sessions&quot;&gt;Cookies &amp;amp; Sessions&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;What’s the purpose of cookies and sessions? It can origin to a question, which is “how can the server tell which browser the request comes from?”. That was indeed an important issue. Later, people came up with the idea of cookies? Sounds sweet. But, how does it work?&lt;/p&gt;

&lt;p&gt;Basically, the server sends a cookie(including some data) to the browser. The browser will have a bite(without understanding the data), send it back and let the server know who ate the cookie.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-226&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-9.14.50-PM-300x211.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;211&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-9.14.50-PM-300x211.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-9.14.50-PM.png 691w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;img class=&quot;alignnone size-medium wp-image-225&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-9.14.59-PM-300x214.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;214&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-9.14.59-PM-300x214.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-26-at-9.14.59-PM.png 680w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then, the identification problem is solved. Cookies have headers and attributes. Some common cookies attributes are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Expires – Sets max lifetime of cookie (date &amp;amp; time)&lt;/li&gt;
  &lt;li&gt;Max-Age – Sets max lifetime of cookie (seconds)&lt;/li&gt;
  &lt;li&gt;Domain – To which hosts to send cookie back&lt;/li&gt;
  &lt;li&gt;Path – For which URLs to send cookie back&lt;/li&gt;
  &lt;li&gt;Secure – Only send cookie on secure connections&lt;/li&gt;
  &lt;li&gt;HttpOnly – Don’t expose cookie to scripts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’re 3 main types of cookies:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;Session Cookie – Deleted on browser close&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;Persistent Cookie – Stored until &lt;/span&gt;expiration &lt;span style=&quot;font-size: 1rem;&quot;&gt;date&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;Third-party Cookie – Cookies from other sites&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cookie is very useful. But, it also has some downsides. The data size of it has a upperbound of 4KB. It can be modified by users. It may also be rejected by the browser.&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;To inspect cookies with chrome: right click anywhere on the page =&amp;gt; inspect =&amp;gt; Application =&amp;gt; Cookies.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;Lets’ move on the sessions. Sessions maintain data correlated to the browser session. Cookies are usually used to implemnt sessions (session is stored in cookies). In java, the corresponding class is &lt;/span&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;HttpSession.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;According to this &lt;a href=&quot;https://www.journaldev.com/1907/java-session-management-servlet-httpsession-url-rewriting&quot;&gt;article&lt;/a&gt;, there’re some other ways to do the identification:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTML Hidden Field – We can create a unique hidden field in the HTML and when user starts navigating, we can set its value unique to the user and keep track of the session. This method can’t be used with links because it needs the form to be submitted every time request is made from client to server with the hidden field. Also it’s not secure because we can get the hidden field value from the HTML source and use it to hack the session.&lt;/li&gt;
  &lt;li&gt;URL Rewriting – We can append a session identifier parameter with every request and response to keep track of the session. This is very tedious because we need to keep track of this parameter in every response and make sure it’s not clashing with other parameters.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These 2 approaches are usually less secure than sessions and cookies if not taken good care of. But, their natures provide more effectiveness and potability over the sessions and cookies in some cases.&lt;/p&gt;

&lt;p&gt;JSP (Java Server Page)&lt;/p&gt;

&lt;p&gt;JSP provides the HTML with logic (or you can argue it embeds logic into HTML). When the web application is executed, the JSP will literally be compiled to servlets. The &lt;span style=&quot;font-size: 1rem;&quot;&gt;unquoted HTML tags will become strings in println statements in the servlets. The jsp tags will just become java code. To view the code on a standalone tomcat server, it’s under the folder: &lt;/span&gt;_…/work/Catalina/localhost/&lt;appname&gt;/ org/apache/jsp._&lt;/appname&gt;&lt;/p&gt;

&lt;p&gt;For java statements, it should be put into &lt;span style=&quot;font-size: 1rem;&quot;&gt;&amp;lt;% and %&amp;gt; tags. The expressions should be put into &amp;lt;%= and %&amp;gt; tags. E.g. &amp;lt;% i = 1 + 1%&amp;gt; and i=&amp;lt;%= 1 + 1%&amp;gt;. There’re some standard variables already defined for us, such as:&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HttpServletRequest &lt;strong&gt;request&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;HttpSession &lt;strong&gt;session&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;JspWriter &lt;strong&gt;out&lt;/strong&gt; (similar to PrintWriter)&lt;/li&gt;
  &lt;li&gt;HttpServletResponse &lt;strong&gt;response&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides statements and expressions, we can go further! &amp;lt;%! … %&amp;gt; can be used to define methods and inner class. We can also import packages with &amp;lt;%@ page import=”…” %&amp;gt;. Or add comments with &amp;lt;%– … –&amp;gt;.&lt;/p&gt;

&lt;p&gt;Next, we really need some data to play with. The JSP EL(expression language) empower us to easily access(using ${}) 4 kinds of variables (in the following order):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Page attribute (Used for local variables on the page)&lt;/li&gt;
  &lt;li&gt;Request attribute (attributes embedded in the request passed to the page)&lt;/li&gt;
  &lt;li&gt;Session attribute (attributes stored in the session)&lt;/li&gt;
  &lt;li&gt;Application attribute (Used to store application-wide information: e.g., initial parameters)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The more &lt;strong&gt;transient&lt;/strong&gt; attributes will be &lt;strong&gt;checked&lt;/strong&gt; &lt;strong&gt;earlier&lt;/strong&gt;. Some java equvilant code will make it easier to understand:&lt;/p&gt;

&lt;p&gt;$(user) equivalent in java:&lt;/p&gt;

&lt;pre class=&quot;brush: java; title: ; notranslate&quot; title=&quot;&quot;&gt;Object o = pageContext.getAttribute(&quot;user&quot;);
if(o == null) o = request.getAttribute(&quot;user&quot;);
if(o == null) o = session.getAttribute(&quot;user&quot;);
if(o == null) o = application.getAttribute(&quot;user&quot;);
&lt;/pre&gt;

&lt;p class=&quot;p1&quot;&gt;
  We can also use dot to access JavaBeans&amp;#8217; fields. For example, $(user.userName) equivalent in java:
&lt;/p&gt;

&lt;pre class=&quot;brush: java; title: ; notranslate&quot; title=&quot;&quot;&gt;Class c = o.getClass();
Method m = c.getMethod(&quot;getUserName&quot;);
Object value = m.invoke(o);
&lt;/pre&gt;

&lt;h2 id=&quot;sql--jdbc&quot;&gt;&lt;span id=&quot;SQL_JDBC&quot;&gt; SQL &amp;amp; JDBC&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Database is crucial in most web applications. But, it may also introduce new issues, such as backup, security, detecting/repairing corruption, and performance. Before the first database came to alive, people relied on the file systems in terms of persistence matters. However, the performance is pretty bad and it’s quite hard to manage.&lt;/p&gt;

&lt;p&gt;Then, relational database is invented. It’s using a &lt;strong&gt;b-tree&lt;/strong&gt; data structure to improve query performance and allows &lt;strong&gt;secondary indices&lt;/strong&gt;. Besides, &lt;a href=&quot;https://en.wikipedia.org/wiki/Teleprocessing_monitor&quot;&gt;&lt;strong&gt;TP monitor&lt;/strong&gt;&lt;/a&gt;(transaction processing monitor) is included to tackle the problems like consistency control, backup, failure recovery, some security etc.&lt;/p&gt;

&lt;p&gt;SQL provides CRUD(create, read, update, delete) operation abilities and some extra functions, such as JOIN, ORDER BY, GROUP BY etc. SQL sounds like a uniform language across different RDBMS. But, it does have some very small differences among them.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-229&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-28-at-3.32.42-PM-300x175.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;175&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-28-at-3.32.42-PM-300x175.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-28-at-3.32.42-PM.png 612w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, we’re approaching this kind of architecture. JDBC driver will handle the low-level interactions with the database. We only need to take care of higher-level operations, connection(pool), query, transaction etc.&lt;/p&gt;

&lt;p&gt;java.sql.Connection and java.sql.Statement are two most important interfaces. For the Statement, &lt;strong&gt;executeQuery&lt;/strong&gt; is responsible for SELECT, SHOW, DESCRIBE, etc and &lt;strong&gt;executeUpdate&lt;/strong&gt; should be related to INSERT, DELETE, UPDATE, CREATE, DROP. For a specific example, you can refer to &lt;a href=&quot;/2017/11/16/sample-jdbc-good-practice/&quot;&gt;Example: JDBC Good Practice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There’re some tricks to consider when working with JDBC:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Prepared Statements: avoid bad characters, reduce chances of SQL injection and improve performance by precompiling queies.&lt;/li&gt;
  &lt;li&gt;Transaction: help consistency, allow rollback, and improve performance by grouping a list of operations.&lt;/li&gt;
  &lt;li&gt;Connection pooling: cut down the connection overhead and save some time (similar to tomcat thread pool)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;orm-object-relational-mapping&quot;&gt;&lt;span id=&quot;ORM_object-relational_mapping&quot;&gt;ORM (object-relational mapping)&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;As we know, Java is an object-oriented programming language. It’s class or object structure is very easy to map to a database schema. That’s a very good thing we should take advantage of.&lt;/p&gt;

&lt;p&gt;There’re at least 2 kinds of conventions to create objects representing data, &lt;a href=&quot;https://www.geeksforgeeks.org/pojo-vs-java-beans/&quot;&gt;POJO and JavaBean&lt;/a&gt;. In simple words, JavaBean is POJO with more restrictions. We use JavaBean as a component model. Then it should satisfy the following conditions (&lt;a href=&quot;https://docstore.mik.ua/orelly/java-ent/jnut/ch06_02.htm&quot;&gt;more details&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-231&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-28-at-7.35.48-PM-300x169.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;169&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-28-at-7.35.48-PM-300x169.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-28-at-7.35.48-PM-768x432.png 768w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-28-at-7.35.48-PM.png 776w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reflection&lt;/strong&gt; is the best friend of JavaBean. People usually use reflection (java.lang.Class) to find the class of a JavaBean. In practice, it can be used with DAO, form beans, JSP EL, GUI, and RPC etc.&lt;/p&gt;

&lt;p&gt;Because JavaBean is an object. Then, it’s possible to have some problem when copying happens. To make a defensive copy of JavaBean, there’re 3 options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Make a new bean and copy all the values to it. (require DAO know all the properties of the bean)&lt;/li&gt;
  &lt;li&gt;Implement Cloneable (require bean to have the function)&lt;/li&gt;
  &lt;li&gt;Use reflection (preferable)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;DAO (data access object) is another class to maintain the database. It’s another abstraction layer to handle all the data/bean related operations. It will make the code more reusable. It’s not necessarily restricted to RDBMS and JDBC. DAO can also store data into memory, files, NoSQL databases and any kind of data sources. It just depends on the implementation. A DAO example can be accessed here: StreamSqlRequest &lt;a href=&quot;/2018/07/25/example-jdbc-better-practicestream-sql-request/&quot;&gt;blog&lt;/a&gt; and &lt;a href=&quot;https://github.com/Lucas12138/StreamSqlRequest/tree/master/src/main/java/cmu/db&quot;&gt;code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Writing Java code to achieve the SQL equivalent on the JavaBeans will require a lot of work. Imagine how many fields we need to take care of. Therefore, people created the ORM tools, object-relational mapping. The ORM tool will automatically create the database table, provide at least basic CRUD functions, handle concurrency issues by supporting the transaction and have reasonable performance. Jeff has a very good and easy-to-use ORM tool: &lt;a href=&quot;http://www.jeffeppinger.com/GenericDAO/&quot;&gt;GenericDAO&lt;/a&gt;. For production level web applications, &lt;a href=&quot;http://hibernate.org/&quot;&gt;Hibernate&lt;/a&gt; is the tool.&lt;/p&gt;

&lt;p&gt;To use an ORM tool, it mandated to have JavaBeans following the restrictions mentioned before, such as no-args constructor, getter and setter, use &lt;span style=&quot;font-size: 1rem;&quot;&gt;camelCase java coding convention etc.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;transactions&quot;&gt;&lt;span id=&quot;Transactions&quot;&gt;Transactions&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Previously, we learned that transactions can help data consistency, rollback and improve performance in many cases. In this section, we will talk more about transactions.&lt;/p&gt;

&lt;p&gt;The transaction system will guarantee the &lt;strong&gt;ACID&lt;/strong&gt; properties. Here’s a brief definition for ACID:&lt;/p&gt;

&lt;div class=&quot;page&quot; title=&quot;Page 6&quot;&gt;
  &lt;div class=&quot;section&quot;&gt;
    &lt;div class=&quot;layoutArea&quot;&gt;
      &lt;div class=&quot;column&quot;&gt;
        &lt;ul&gt;
          &lt;li&gt;
            Atomicity: all or none
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span style=&quot;font-size: 1rem;&quot;&gt;Consistency: &lt;/span&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;if consistent before transaction, so too after&lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span style=&quot;font-size: 1rem;&quot;&gt;Isolation: despite concurrent execution, there exists exactly one serial ordering &lt;/span&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;span style=&quot;font-size: 1rem;&quot;&gt;Durability: &lt;/span&gt;committed&lt;span style=&quot;font-size: 1rem;&quot;&gt; transaction cannot be undone&lt;/span&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;div class=&quot;section&quot;&gt;
          &lt;div class=&quot;layoutArea&quot;&gt;
            &lt;div class=&quot;column&quot;&gt;
              &lt;div class=&quot;page&quot; title=&quot;Page 6&quot;&gt;
                &lt;div class=&quot;section&quot;&gt;
                  &lt;div class=&quot;layoutArea&quot;&gt;
                    &lt;div class=&quot;column&quot;&gt;
                      &lt;div class=&quot;page&quot; title=&quot;Page 6&quot;&gt;
                        &lt;div class=&quot;section&quot;&gt;
                          &lt;div class=&quot;layoutArea&quot;&gt;
                            &lt;p&gt;
                              Transactions are commonly used in file systems (fsck, chkdsk, scandisk), databases, and applications built on DB.
                            &lt;/p&gt;
                            
                            &lt;p&gt;
                              Using transaction with GenericDAO is very easy (pseudo):
                            &lt;/p&gt;
                            
                            &lt;ol&gt;
                              &lt;li&gt;
                                Transaction.begin()
                              &lt;/li&gt;
                              &lt;li&gt;
                                Transaction.commit()
                              &lt;/li&gt;
                              &lt;li&gt;
                                finally -&amp;gt; if (Transaction.isActive()) Transaction.rollback()
                              &lt;/li&gt;
                            &lt;/ol&gt;
                            
                            &lt;p&gt;
                              Now, let&amp;#8217;s see how the ACID is enforced for complex disk data structure, e.g. b-tree. Here&amp;#8217;s the property to solution mapping:
                            &lt;/p&gt;
                            
                            &lt;ul&gt;
                              &lt;li&gt;
                                Atomicity: write-ahead logging
                              &lt;/li&gt;
                              &lt;li&gt;
                                &lt;span style=&quot;font-size: 1rem;&quot;&gt;Consistency: depends on the &lt;/span&gt;application&lt;span style=&quot;font-size: 1rem;&quot;&gt; &lt;/span&gt;
                              &lt;/li&gt;
                              &lt;li&gt;
                                &lt;span style=&quot;font-size: 1rem;&quot;&gt;Isolation: two-phase locking &lt;/span&gt;
                              &lt;/li&gt;
                              &lt;li&gt;
                                &lt;span style=&quot;font-size: 1rem;&quot;&gt;Durability: write-ahead logging&lt;/span&gt;
                              &lt;/li&gt;
                            &lt;/ul&gt;
                            
                            &lt;div class=&quot;section&quot;&gt;
                              &lt;div class=&quot;layoutArea&quot;&gt;
                                &lt;div class=&quot;column&quot;&gt;
                                  &lt;div class=&quot;page&quot; title=&quot;Page 19&quot;&gt;
                                    &lt;div class=&quot;section&quot;&gt;
                                      &lt;div class=&quot;layoutArea&quot;&gt;
                                        &lt;div class=&quot;column&quot;&gt;
                                          &lt;p&gt;
                                            &lt;strong&gt;Write-ahead logging&lt;/strong&gt; provides atomicity and durability. It buffers disk pages in a memory buffer cache. Log all the changes of DB to disk before the changes are written:
                                          &lt;/p&gt;
                                          
                                          &lt;p&gt;
                                            1&amp;gt; &lt;span style=&quot;font-size: 1rem;&quot;&gt;When changing data pages&lt;/span&gt;, queue&lt;span style=&quot;font-size: 1rem;&quot;&gt; (to log) records that describe changes 2&amp;gt; &lt;/span&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;When committing, queue “commit-record” into &lt;/span&gt;log&lt;span style=&quot;font-size: 1rem;&quot;&gt;, flush log (to disk) 3&amp;gt; &lt;/span&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;Before writing out cached DB pages, ensure relevant log records flushed&lt;/span&gt;
                                          &lt;/p&gt;
                                          
                                          &lt;div class=&quot;page&quot; title=&quot;Page 20&quot;&gt;
                                            &lt;div class=&quot;section&quot;&gt;
                                              &lt;div class=&quot;layoutArea&quot;&gt;
                                                &lt;div class=&quot;column&quot;&gt;
                                                  &lt;p&gt;
                                                    To recover, when restarting after a failure, scan the log, redo the transactions with commit logs(case1) or undo the transactions without commit logs(case2). When handling a normal rollback, scan the logs and undo the related work(case3).
                                                  &lt;/p&gt;
                                                  
                                                  &lt;p&gt;
                                                    In terms of logs, the first 2 very important  kinds: value logging(e.g. v1 = 10) and operation logging(e.g. add 1 to v1). A visualization is as follows:
                                                  &lt;/p&gt;
                                                  
                                                  &lt;p&gt;
                                                    &lt;img class=&quot;alignnone size-medium wp-image-238&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.04-PM-300x214.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;214&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.04-PM-300x214.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.04-PM.png 636w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;img class=&quot;alignnone size-medium wp-image-237&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.12-PM-300x208.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;208&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.12-PM-300x208.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.12-PM.png 639w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;img class=&quot;alignnone size-medium wp-image-236&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.21-PM-300x209.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;209&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.21-PM-300x209.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.21-PM.png 629w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;img class=&quot;alignnone size-medium wp-image-235&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.30-PM-300x212.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;212&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.30-PM-300x212.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.30-PM.png 632w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;img class=&quot;alignnone size-medium wp-image-234&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.39-PM-300x214.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;214&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.39-PM-300x214.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.39-PM.png 635w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;img class=&quot;alignnone size-medium wp-image-233&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.50-PM-300x216.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;216&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.50-PM-300x216.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-10.33.50-PM.png 643w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                  &lt;/p&gt;
                                                  
                                                  &lt;p&gt;
                                                    Except for the value logs and operation logs, there&amp;#8217;re rollback logs, page-flush logs, and checkpoint logs. Those&amp;#8217;re also very critical. Because when we want to recover the system, we don&amp;#8217;t want to go through all the logs. That&amp;#8217;s when those logs come to help.
                                                  &lt;/p&gt;
                                                  
                                                  &lt;p&gt;
                                                    As for locking, there&amp;#8217;re exclusive locks(e.g. mutex lock and semaphores) and shared/exclusive locks(read/write locks). So, what&amp;#8217;s &lt;strong&gt;two-phase locking&lt;/strong&gt;? Phase 1: grab locks. Phase 2: drop locks. You are not allowed to get any new locks after dropping the locks. To execute rollback, you have to hold locks. Usually, all locks are held until the commit or rollback has completed.
                                                  &lt;/p&gt;
                                                  
                                                  &lt;p&gt;
                                                    Disasters do happen. We can use the following ways to solve or reduce the influence of disasters.
                                                  &lt;/p&gt;
                                                  
                                                  &lt;ul&gt;
                                                    &lt;li&gt;
                                                      Power failure: write-ahead logging
                                                    &lt;/li&gt;
                                                    &lt;li&gt;
                                                      Data disk failure: backup tapes &amp;amp; log (or mirror)
                                                    &lt;/li&gt;
                                                    &lt;li&gt;
                                                      Log disk failure: mirror the log
                                                    &lt;/li&gt;
                                                    &lt;li&gt;
                                                      Machine room failure: mirror the log elsewhere
                                                    &lt;/li&gt;
                                                  &lt;/ul&gt;
                                                &lt;/div&gt;
                                                
                                                &lt;p&gt;
                                                  The transaction system doesn&amp;#8217;t only apply to RDBMalsot aslo work for NoSQL although the data models may be very different.
                                                &lt;/p&gt;
                                                
                                                &lt;h2&gt;
                                                  &lt;span id=&quot;MVC_model_view_controller&quot;&gt;MVC (model view controller)&lt;/span&gt;
                                                &lt;/h2&gt;
                                                
                                                &lt;p&gt;
                                                  Based on our experience, it&amp;#8217;s workable to handle request with JSP only. But, it&amp;#8217;s really not very elegant. It&amp;#8217;s pretty awkward when the application is large. Errors are also hard to handle. It requires a lot of initialization and instantiation. A much better way to always avoid using JSP to handle request from users directly. We should only use JSP as a view and use servlets to handle the request and forward to JSP. The very important interface here is RequestDispatcher, which will forward to request. Generally, servlet environment is a better place to handle security, validation of inputs, invocation of business logic. And JSP environment is a better place to handle formatting.
                                                &lt;/p&gt;
                                                
                                                &lt;p&gt;
                                                  &lt;img class=&quot;alignnone size-medium wp-image-239&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-11.08.49-PM-300x197.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;197&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-11.08.49-PM-300x197.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-29-at-11.08.49-PM.png 544w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                &lt;/p&gt;
                                                
                                                &lt;p&gt;
                                                  This is how MVC looks like.
                                                &lt;/p&gt;
                                                
                                                &lt;p&gt;
                                                  The Controller.java will:
                                                &lt;/p&gt;
                                                
                                                &lt;ul&gt;
                                                  &lt;li&gt;
                                                    Handles security checking in one place
                                                  &lt;/li&gt;
                                                  &lt;li&gt;
                                                    Initializes application in one place
                                                  &lt;/li&gt;
                                                  &lt;li&gt;
                                                    Handles routing of requests in one place
                                                  &lt;/li&gt;
                                                &lt;/ul&gt;
                                                
                                                &lt;p&gt;
                                                  The Controller.java will contain serval actions(Action.java is an abstract class). Action.java allows consistently invocate business logic by using a hashmap. Concrete action classes usually map to different JSP view. A good example will be discussed later (HW5 reflection).
                                                &lt;/p&gt;
                                                
                                                &lt;p&gt;
                                                  Model refers to database related classes. Usually, there will be many DAOs. Therefore, it&amp;#8217;s good to have a Model.java to handle all the initialization and aggregates the DAOs.
                                                &lt;/p&gt;
                                                
                                                &lt;p&gt;
                                                  JSP will look at the request attributes or session attributes etc. forwarded to it. Passing JavaBeans is very convenient. It very easy to use. And the JSP EL will make it even easier to access the JavaBean&amp;#8217;s fields.
                                                &lt;/p&gt;
                                                
                                                &lt;p&gt;
                                                  MVC leads to SoC(&lt;strong&gt;Separate of Concern&lt;/strong&gt;), which introduces modularity. Model handles database, view deals with UI and controller routes to different actions. SoC also makes it easier to build a large application with many teammates. Different people can focus on different parts that they&amp;#8217;re familiar with.
                                                &lt;/p&gt;
                                                
                                                &lt;h2&gt;
                                                  &lt;span id=&quot;Tag_Libraries&quot;&gt;Tag Libraries&lt;/span&gt;
                                                &lt;/h2&gt;
                                                
                                                &lt;p&gt;
                                                  As we discussed previously, servlets should not do anything related to view formatting and JSP should perform no business logic. It&amp;#8217;s easy to servlets to achieve. But, how can JSP contain no Java code? If you have some experience working with JSP, you will notice that if you add some conditions or loops into the JSP, it will look very ugly and hard to read. Therefore, it&amp;#8217;s difficult to debug when there&amp;#8217;re some mistakes. As a matter of fact, a kind of tools can make it a lot easier for us to have conditions and loops etc. without Java code in JSP. That is the tag library.
                                                &lt;/p&gt;
                                                
                                                &lt;p&gt;
                                                  There&amp;#8217;re many tag libraries, such as &lt;strong&gt;Jakarta Taglibs&lt;/strong&gt;, &lt;strong&gt;JSTL&lt;/strong&gt;(JSP Standard Tag Library) etc. After 2 pre-requests are met, JSTL(core) will be ready to go.
                                                &lt;/p&gt;
                                                
                                                &lt;div class=&quot;page&quot; title=&quot;Page 15&quot;&gt;
                                                  &lt;div class=&quot;section&quot;&gt;
                                                    &lt;div class=&quot;layoutArea&quot;&gt;
                                                      &lt;div class=&quot;column&quot;&gt;
                                                        &lt;ul&gt;
                                                          &lt;li&gt;
                                                            install jstl.jar and standard.jar in WEB-INF/lib
                                                          &lt;/li&gt;
                                                          &lt;li&gt;
                                                            declare use in top of .jsp file
                                                          &lt;/li&gt;
                                                        &lt;/ul&gt;
                                                        
                                                        &lt;p&gt;
                                                          For JSTL core tags, it can achieve conditions with &amp;#8220;if&amp;#8221;, &amp;#8220;choose&amp;#8221;, &amp;#8220;when&amp;#8221; tags. It can also achieve loops with &amp;#8220;forEach&amp;#8221; and &amp;#8220;forTokens&amp;#8221;. &amp;#8220;forEach&amp;#8221; will be able to loop on an array or java.util.Collection. It has a EL similar to JSP EL. But, JSTL EL also has a keyword &amp;#8220;empty&amp;#8221; to test null or empty string.
                                                        &lt;/p&gt;
                                                        
                                                        &lt;p&gt;
                                                          Some good examples can be found &lt;a href=&quot;https://www.javatpoint.com/jstl&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.tutorialspoint.com/jsp/jsp_standard_tag_library.htm&quot;&gt;here&lt;/a&gt;.
                                                        &lt;/p&gt;
                                                        
                                                        &lt;p&gt;
                                                          Except for the core tags, it also has some other tags for some complemental functionalities, such as format tags, function tags etc.
                                                        &lt;/p&gt;
                                                        
                                                        &lt;h2&gt;
                                                          &lt;span id=&quot;AJAX_asynchronous_javascript_and_XML&quot;&gt;AJAX (asynchronous javascript and XML)&lt;/span&gt;
                                                        &lt;/h2&gt;
                                                        
                                                        &lt;p&gt;
                                                          AJAX is a technique for creating more interactive web applications.
                                                        &lt;/p&gt;
                                                        
                                                        &lt;div class=&quot;section&quot;&gt;
                                                          &lt;div class=&quot;layoutArea&quot;&gt;
                                                            &lt;div class=&quot;column&quot;&gt;
                                                              &lt;ul&gt;
                                                                &lt;li&gt;
                                                                  Use an XMLHttpRequest object to make requests to the web server for data asynchronously (or synchronously)
                                                                &lt;/li&gt;
                                                                &lt;li&gt;
                                                                  &lt;span style=&quot;font-size: 1rem;&quot;&gt;Receive server data as XML (or text or JSON)&lt;/span&gt;
                                                                &lt;/li&gt;
                                                                &lt;li&gt;
                                                                  &lt;span style=&quot;font-size: 1rem;&quot;&gt;Convert the XML into a DOM tree &lt;/span&gt;
                                                                &lt;/li&gt;
                                                                &lt;li&gt;
                                                                  &lt;span style=&quot;font-size: 1rem;&quot;&gt;Extract data from the XML DOM tree and change the HTML document’s DOM tree (thereby updating the page)&lt;/span&gt;
                                                                &lt;/li&gt;
                                                              &lt;/ul&gt;
                                                              
                                                              &lt;p&gt;
                                                                It has benefits like enabling more interactive websites(page won&amp;#8217;t be reloaded, requests can be asynchronous), and reduction on the server&amp;#8217;s load.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                For more information about XMLHttpRequest:
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-241&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-9.44.15-AM-300x176.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;176&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-9.44.15-AM-300x176.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-9.44.15-AM.png 618w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                XMLHttpRequest can be sent asynchronously and when the state of the request changes, your JavaScript method is called. The request can be query string, post data or anything else. The response can be in the format of XML, JSON, chunks of HTML or anything.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                We can implement the javascript program by ourselves. But, there&amp;#8217;re some libraries already for us to simplfy the process, e.g. jQuery. jQuery provides functions of DOM manipulation, such as element selection, traversal, and manipulation. It also supports event, AJAX. It has some other utilites and plug-ins too. Here&amp;#8217;s a &lt;a href=&quot;https://www.w3schools.com/jquery/&quot;&gt;quick start&lt;/a&gt; on jQuery.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                HTTP protocol has the following characteristics.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-242&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-9.58.37-AM-300x124.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;124&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-9.58.37-AM-300x124.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-9.58.37-AM.png 497w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                AJAX does have some limitation when the clients need to poll the server very frequently. &lt;a href=&quot;https://en.wikipedia.org/wiki/WebSocket&quot;&gt;WebSocket&lt;/a&gt; another protocol can be very helpful in that case. HTTP&amp;#8217;s headers are usually around the size of 700 bytes. However, WebSocket&amp;#8217;s header&amp;#8217;s only around 3 bytes. This saves a lot of the network cost and provides efficiency. Google Doc and Multiplayer game are good &lt;a href=&quot;https://www.infoworld.com/article/2609720/application-development/9-killer-uses-for-websockets.html&quot;&gt;examples&lt;/a&gt; where WebSocket can be applied.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                This is the characteristics of WebSocket.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-243&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-10.10.10-AM-300x141.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;141&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-10.10.10-AM-300x141.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-10.10.10-AM.png 523w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                It can be easily setup by:
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-244&quot; src=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-10.11.37-AM-300x177.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;177&quot; srcset=&quot;/wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-10.11.37-AM-300x177.png 300w, /wp-content/uploads/2018/10/Screen-Shot-2018-10-30-at-10.11.37-AM.png 513w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Java and tomcat also support the WebSocket. javax.websocket should be the place to look into. It has a sevlet using HandshakeResponse to switch from HTTP to WebSocket.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;h2&gt;
                                                                &lt;span id=&quot;Security&quot;&gt;Security&lt;/span&gt;
                                                              &lt;/h2&gt;
                                                              
                                                              &lt;p&gt;
                                                                This is one of the most important topics related to web application. Without considering security issues, the web application will be so vulnerable that hackers can easily break in or bring the whole service down.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Apparently attacking the physical servers is possible, but we won&amp;#8217;t talk too much about that here. Let&amp;#8217;s assume the underlying network is secure first.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                How complex the password do you allow your users to have? If the bad guy can guess the password, they break the application. Two-factor authentication or &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-factor_authentication&quot;&gt;multi-factor authentication&lt;/a&gt; will help in this case. With some extra information, such as something they know, something they have, or something they are, we can validate the identity of the user.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                SQL injection is another common attack. This kind of attack is basically adding extra SQL query as user input. If the backend implementation is not using prepared statement or taking into this kind of case into account. The SQL injection will be possible. Then anything SQL can do the hacker can do. Here&amp;#8217;s an &lt;a href=&quot;https://www.incapsula.com/web-application-security/sql-injection.html&quot;&gt;example&lt;/a&gt;.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Cross-site scripting (&lt;a href=&quot;https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)&quot;&gt;XSS&lt;/a&gt;) is embedding scripts into input. This may happen if it&amp;#8217;s possible the input willl be saved to database or passed on to other users. Checking if the user input contains HTML tags can be a solution here. The 2 specific options are either rejecting the input or sanitize the input.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Cross-site request forgery (CSRF), a web page from a Site A can trick a user into submitting a request to another Site B (The user might already be logged in to Site B).
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-246&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.19.18-PM-300x130.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;130&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.19.18-PM-300x130.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.19.18-PM.png 549w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-247&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.19.51-PM-300x149.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;149&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.19.51-PM-300x149.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.19.51-PM.png 618w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Now, let&amp;#8217;s remove the assumption (secure network). If the network can be attacked, what can the attacks be? There&amp;#8217;re some common attacks, such as man-in-the-middle attack, sniffing and spoofing. They&amp;#8217;re described as follows.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-248&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.24.40-PM-300x213.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;213&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.24.40-PM-300x213.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.24.40-PM.png 634w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-249&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.24.58-PM-300x167.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;167&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.24.58-PM-300x167.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.24.58-PM.png 664w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-250&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.25.14-PM-300x202.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;202&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.25.14-PM-300x202.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.25.14-PM.png 657w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Before we move on the solutions, let&amp;#8217;s make it clear about the 3 words, authentication, authorization and privacy.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-251&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.30.28-PM-300x180.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;180&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.30.28-PM-300x180.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.30.28-PM.png 754w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Therefore, the corresponding solutions are:
                                                              &lt;/p&gt;
                                                              
                                                              &lt;ul class=&quot;ul1&quot;&gt;
                                                                &lt;li class=&quot;li1&quot;&gt;
                                                                  Sniffing: privacy
                                                                &lt;/li&gt;
                                                                &lt;li class=&quot;li1&quot;&gt;
                                                                  Spoofing: authentication
                                                                &lt;/li&gt;
                                                                &lt;li class=&quot;li1&quot;&gt;
                                                                  Man-in-the-middle: authentication and privacy
                                                                &lt;/li&gt;
                                                              &lt;/ul&gt;
                                                              
                                                              &lt;p&gt;
                                                                In terms of authentication, there&amp;#8217;re 3 common approaches.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-252&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.33.35-PM-300x112.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;112&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.33.35-PM-300x112.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.33.35-PM.png 612w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                But, there&amp;#8217;s another way to provide both authentication and privacy, &lt;strong&gt;SSL (Secure Sockets Layer)&lt;/strong&gt;. SSL is a layer on top of TCP and a security model based on strong encryption techniques. Some related crypto topics, such as one-way Hashing, symmetric key encryption, asymmetric key encryption and certificate authority etc. are good to know.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Those crypto topics are also covered in another course, 95702 distributed systems. It&amp;#8217;s more in-depth there. So, for here, let&amp;#8217;s think about 4 simple scenarios.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;ol&gt;
                                                                &lt;li&gt;
                                                                  Use a symmetric secret key, like WWII and &lt;strong&gt;TEA&lt;/strong&gt; cases. This is normally faster than asymmetric approach but less reliable and secure.
                                                                &lt;/li&gt;
                                                                &lt;li&gt;
                                                                  Use ticket/certificate, like &lt;strong&gt;Kerberos&lt;/strong&gt;. This requires a 3rd party to manage the certificates for clients and servers. But, it will be secure and efficient. The con is the 3rd party will be a single point of failure.
                                                                &lt;/li&gt;
                                                                &lt;li&gt;
                                                                  Use digital signature(hash digest) plus asymmetric keys. This is secure without a third party but not very efficient.
                                                                &lt;/li&gt;
                                                                &lt;li&gt;
                                                                  Add symmetric secret keys to scenario 3 once the connection is established, like &lt;strong&gt;SSL&lt;/strong&gt;. Another important thing is that the server&amp;#8217;s public key has to be signed by a trusted 3rd party. In other words, we have to authenticate the servers. This is the most widely used approach. It provides both security and efficiency. Here&amp;#8217;s how SSL hand shake looks like.
                                                                &lt;/li&gt;
                                                              &lt;/ol&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-253&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.53.30-PM-300x203.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;203&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.53.30-PM-300x203.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.53.30-PM.png 669w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                &lt;img class=&quot;alignnone size-medium wp-image-254&quot; src=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.54.18-PM-300x210.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;210&quot; srcset=&quot;/wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.54.18-PM-300x210.png 300w, /wp-content/uploads/2018/11/Screen-Shot-2018-11-04-at-7.54.18-PM.png 751w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                Now SSL has been upgraded to &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;&lt;strong&gt;TLS&lt;/strong&gt;&lt;/a&gt;(Transport Layer Security ). The concepts didn&amp;#8217;t change much though. TLS provides server authentication, client authentication(optional) and private communication, too. Here&amp;#8217;s a little summary on SSL.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p class=&quot;p1&quot;&gt;
                                                                SSL provides:
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p class=&quot;p1&quot;&gt;
                                                                =&amp;gt; server authentication (&lt;b&gt;always&lt;/b&gt;)
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p class=&quot;p1&quot;&gt;
                                                                =&amp;gt; client authentication (&lt;b&gt;sometimes&lt;/b&gt;, need client certificate)
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p class=&quot;p1&quot;&gt;
                                                                =&amp;gt; &lt;b&gt;never&lt;/b&gt; authorization
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p class=&quot;p1&quot;&gt;
                                                                =&amp;gt; private communication (&lt;b&gt;always&lt;/b&gt;, the communication can be seen but hard to decrypted)
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p class=&quot;p1&quot;&gt;
                                                                =&amp;gt; secret communication (&lt;b&gt;never&lt;/b&gt;, because the SSL communication will always be seen; VPN provides secret communication)
                                                              &lt;/p&gt;
                                                              
                                                              &lt;h2&gt;
                                                                &lt;span id=&quot;Cloud&quot;&gt;Cloud&lt;/span&gt;
                                                              &lt;/h2&gt;
                                                              
                                                              &lt;p&gt;
                                                                How can we talk about web application without talking about cloud deployment?! Yeah, the main focus of this course is not about the cloud, unfortunately. Deploying java web application to the cloud is actually very easy. You can use IaaS and make the dependencies on your own with either instance or docker containers. Or you can use PaaS, where you don&amp;#8217;t even need to worry a lot about the dependencies.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                This section will be a short brief history about the cloud. Maybe next year, I will make a post about the cloud only and in details.
                                                              &lt;/p&gt;
                                                              
                                                              &lt;p&gt;
                                                                The cloud is a really hot topic recently. But back in the 1960&amp;#8217;s, Standford&amp;#8217;s professor John McCarthy predicted, &amp;#8220;computation &amp;#8230; organized as a public utility&amp;#8221;. That&amp;#8217;s is pretty much the idea of cloud! The 1960&amp;#8217;s is the era of mainframe computers. It&amp;#8217;s not common for ordinary people to own a computer. The 1980&amp;#8217;s, the time of personal computing arrived. More people were able to have a computer but still not a lot. The 2000&amp;#8217;s the when the cloud&amp;#8217;s era began. This is based on the evolution of technology that can manage clusters of machines and the development of web servers. AWS, Azure, and GCP are the 3 main players now in the market. I believe there&amp;#8217;re many other players planning to take a fair share, such as Alibaba, Salesforce, Oracle, Tencent, SAP etc.
                                                              &lt;/p&gt;
                                                            &lt;/div&gt;
                                                            
                                                            &lt;h1&gt;
                                                              &lt;span id=&quot;Practice&quot;&gt;Practice&lt;/span&gt;
                                                            &lt;/h1&gt;
                                                            
                                                            &lt;p&gt;
                                                              &amp;#8220;Talk is cheap&amp;#8221;, some hands-on practice will definitely help us learn more. Check out this &lt;a href=&quot;https://github.com/Lucas12138/JavaEE-Web-Application&quot;&gt;link&lt;/a&gt; to see more. It has contained descriptions, diagrams, and code. Therefore, I won&amp;#8217;t put the unnecessary duplicates here. Finally, what a great course! A big hand for Professor Jeff!
                                                            &lt;/p&gt;
                                                          &lt;/div&gt;
                                                        &lt;/div&gt;
                                                      &lt;/div&gt;
                                                    &lt;/div&gt;
                                                  &lt;/div&gt;
                                                &lt;/div&gt;
                                              &lt;/div&gt;
                                            &lt;/div&gt;
                                          &lt;/div&gt;
                                        &lt;/div&gt;
                                      &lt;/div&gt;
                                    &lt;/div&gt;
                                  &lt;/div&gt;
                                &lt;/div&gt;
                              &lt;/div&gt;
                            &lt;/div&gt;
                          &lt;/div&gt;
                        &lt;/div&gt;
                      &lt;/div&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><author><name>Lucas</name></author><summary type="html">Contents 1 Introduction 2 Concepts 2.1 HTTP, HTML, CSS and Javascript 2.2 Servlets &amp;amp; Tomcats 2.3 Threads 2.4 Cookies &amp;amp; Sessions 2.5  SQL &amp;amp; JDBC 2.6 ORM (object-relational mapping) 2.7 Transactions 2.8 MVC (model view controller) 2.9 Tag Libraries 2.10 AJAX (asynchronous javascript and XML) 2.11 Security 2.12 Cloud 3 Practice</summary></entry><entry><title type="html">Example: JDBC Better Practice(Stream SQL Request)</title><link href="https:///Lucas12138.github.io/2018/07/25/example-jdbc-better-practicestream-sql-request/" rel="alternate" type="text/html" title="Example: JDBC Better Practice(Stream SQL Request)" /><published>2018-07-25T10:37:41-07:00</published><updated>2018-07-25T10:37:41-07:00</updated><id>https:///Lucas12138.github.io/2018/07/25/example-jdbc-better-practicestream-sql-request</id><content type="html" xml:base="https:///Lucas12138.github.io/2018/07/25/example-jdbc-better-practicestream-sql-request/">&lt;p&gt;Months before, I gave an &lt;a href=&quot;/2017/11/16/sample-jdbc-good-practice/&quot;&gt;example&lt;/a&gt; about JDBC “good” practice. To be honest, I have been prepared to learn some better practices in the future. Because that one is too basic. I know there may not be a best practice of JDBC existing. But, I did learn some lessons from CMU courses and an internship in Japan. I would like to show you some interesting ideas. If you want to access the code, please feel free to check it &lt;a href=&quot;https://github.com/Lucas12138/StreamSqlRequest&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;1) ResultSet and PreparedStatement always keep close to each other. Therefore, we can make them into a class, &lt;strong&gt;DBResult&lt;/strong&gt;. Besides, normally, we need to keep track of affected rows number and generated keys. So, we include them in that class as well.&lt;/p&gt;

&lt;p&gt;2) SqlRequest is not only a ConnectionManager now. Except for taking care of opening and closing connections, it will &lt;strong&gt;treat&lt;/strong&gt; SQL string as well. 2 features are added here for the treat. We will be able to push &lt;strong&gt;parameter&lt;/strong&gt;/&lt;strong&gt;member&lt;/strong&gt; to the SQL request, which can remove a lot of duplicate code like setInt, setString etc. and make it easier to work with different data types. The other feature is the &lt;strong&gt;callback&lt;/strong&gt; style. Java itself uses many callbacks, like &lt;a href=&quot;http://www.informit.com/articles/article.aspx?p=1998555&amp;amp;seqNum=3&quot;&gt;ActionListener&lt;/a&gt;. To be simple, it’s passing interface as a parameter of a method. It can make code structure more flexible and elegant. In our case, we can easily add logic in &lt;strong&gt;DAO.treat&lt;/strong&gt; as a lambda expression, which is actually creating an anonymous class that implements the &lt;strong&gt;Handler&lt;/strong&gt; interface and overrides the interface’s onResult method. It’s very handy. I didn’t imagine that this callback style works so well with JDBC.&lt;/p&gt;

&lt;p&gt;3) &lt;strong&gt;DBBean&lt;/strong&gt; is added and very useful, too. It will be the parent of other specific beans. The reason for using this class is we will be able to generate beans with values inside. And we won’t have to set the value for each field every time. Basic &lt;strong&gt;reflection&lt;/strong&gt; is used here. &lt;strong&gt;buildFrom&lt;/strong&gt; is the method to build the bean from the ResultSet. In the example, AdminBean is a specific bean which extends from DBBean. One thing we need to be careful is that we should keep the field name in java and the field name in MySQL consistent.&lt;/p&gt;

&lt;p&gt;4) &lt;strong&gt;DAO&lt;/strong&gt; handles basic, general CRUD (create, read, update, delete) operations. And the create includes insert and upset. upset will check the key and update on duplicate. It can be helpful sometimes. Similar to bean structure, DAO is a parent class as well. More specific logic should be added to lower levels, like AdminDAO. There can be a TODO here, which is when there’re many complex queries, we should consider adding one more layer between DAO and AdminDAO (could be named as AdminCRUD etc.). And AdminCRUD will include some SQL string to handle some basic queries and the AdminDAO will take care of the complex logic after data are retrieved from the database. It’s better to implement the login in java rather than SQL string. Otherwise, the code size can grow extremely big.&lt;/p&gt;

&lt;p&gt;5) Streaming when possible! Streaming here doesn’t only mean the stream().map() etc. &lt;strong&gt;AdminStreamerDAO&lt;/strong&gt; is a DAO with streaming style. &lt;strong&gt;streamedRead&lt;/strong&gt; won’t return anything. But, it uses callback and buffers to set an upper bound of memory usage. People do come across very &lt;strong&gt;large tables&lt;/strong&gt; from time to time. Streaming can be necessary for those. OOM (out of memory) may be a common issue without streaming. Another important condition is that the primary key or efficient indexes should have &lt;strong&gt;at least 2 fields&lt;/strong&gt;. Then, it can stream on one field and fetch beans partially with buffers.&lt;/p&gt;

&lt;p&gt;I believe this might still not be the best practice. And there should have already had many good frameworks to use. But, I suppose ideas above are good enough for production level with not very high requirements or demands.&lt;/p&gt;

&lt;p&gt;Finally, I would love to have your thoughts or comments. Please let me know if you can make it even better! Thanks!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;</content><author><name>Lucas</name></author><summary type="html">Months before, I gave an example about JDBC “good” practice. To be honest, I have been prepared to learn some better practices in the future. Because that one is too basic. I know there may not be a best practice of JDBC existing. But, I did learn some lessons from CMU courses and an internship in Japan. I would like to show you some interesting ideas. If you want to access the code, please feel free to check it here.</summary></entry><entry><title type="html">Database Management: Review Framework</title><link href="https:///Lucas12138.github.io/2018/01/14/database-management-review-framework/" rel="alternate" type="text/html" title="Database Management: Review Framework" /><published>2018-01-13T23:04:25-08:00</published><updated>2018-01-13T23:04:25-08:00</updated><id>https:///Lucas12138.github.io/2018/01/14/database-management-review-framework</id><content type="html" xml:base="https:///Lucas12138.github.io/2018/01/14/database-management-review-framework/">&lt;p&gt;The main reason for doing this framework is that knowledge points are consistently forgotten if we don’t use them. So, I want to wrap it up in a concise way.&lt;/p&gt;

&lt;div id=&quot;toc_container&quot; class=&quot;no_bullets&quot;&gt;
  &lt;p class=&quot;toc_title&quot;&gt;
    Contents
  &lt;/p&gt;
  
  &lt;ul class=&quot;toc_list&quot;&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Relational_Model&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;1&lt;/span&gt; Relational Model&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Entity-Relationship_Modeling&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;2&lt;/span&gt; Entity-Relationship Modeling&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Normalization&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;3&lt;/span&gt; Normalization&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Relational_Algebra&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;4&lt;/span&gt; Relational Algebra&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&quot;#SQL&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;5&lt;/span&gt; SQL&lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;

&lt;h1 id=&quot;relational-model&quot;&gt;&lt;span id=&quot;Relational_Model&quot;&gt;Relational Model&lt;/span&gt;&lt;/h1&gt;

&lt;p&gt;First of all, some critical terminologies are as follows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relational Database&lt;/strong&gt;: a collection of relations&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relation&lt;/strong&gt;: a set of tuples&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tuple&lt;/strong&gt;: a collection of attributes’ values&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attribute&lt;/strong&gt;: a characteristic of a tuple in a relation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Domain&lt;/strong&gt;: a set of acceptable values of an attribute&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Degree&lt;/strong&gt;: number of attributes in a relation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cardinality&lt;/strong&gt;: number of tuples in a relation&lt;/p&gt;

&lt;p&gt;In terms of data integrity, relational keys are introduced.&lt;/p&gt;

&lt;p&gt;Those are &lt;strong&gt;Superkey&lt;/strong&gt;, &lt;strong&gt;Candidate Key&lt;/strong&gt;, &lt;strong&gt;Primary&lt;/strong&gt; &lt;strong&gt;Key&lt;/strong&gt;, &lt;strong&gt;Foreign&lt;/strong&gt; &lt;strong&gt;Key&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In short,  superkey is an attribute or a set of attributes that can identify each tuple uniquely. Candidate key can be viewed as a subset of superkey, which has no subset that can identify each tuple uniquely. Primary key is a candidate key that is selected to identify the tuples. Foreign key matches candidate key of another relation.&lt;/p&gt;

&lt;h1 id=&quot;entity-relationship-modeling&quot;&gt;&lt;span id=&quot;Entity-Relationship_Modeling&quot;&gt;Entity-Relationship Modeling&lt;/span&gt;&lt;/h1&gt;

&lt;p&gt;While developing a database model, we need to translate the business rules into &lt;strong&gt;conceptual&lt;/strong&gt; model first. Then, we can design &lt;strong&gt;logical&lt;/strong&gt; model based on the conceptual model. Finally, we will develop the &lt;strong&gt;physical&lt;/strong&gt; model. The differences between those three are shown in the table below.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-178&quot; src=&quot;/wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-4.31.26-PM-300x204.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;204&quot; srcset=&quot;/wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-4.31.26-PM-300x204.png 300w, /wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-4.31.26-PM.png 397w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here are some tips related to &lt;strong&gt;ER diagram&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;While developing the logical model, FK and attributes on the relationship should be included in the M side entity if the relationship is 1: M (one-to-many).&lt;/li&gt;
  &lt;li&gt;Relationship &lt;strong&gt;participation&lt;/strong&gt; includes &lt;strong&gt;optional&lt;/strong&gt; and &lt;strong&gt;mandatory&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Many-to-many relationships should be converted to &lt;strong&gt;composite entities&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Relationships can be &lt;strong&gt;binary&lt;/strong&gt;, &lt;strong&gt;N-ary&lt;/strong&gt; or even &lt;strong&gt;recursive&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Solution for multivalued attributes: creating new attributes or a new entity&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In extended ER model, &lt;strong&gt;specialization&lt;/strong&gt;, &lt;strong&gt;generalization&lt;/strong&gt;, &lt;strong&gt;categorization&lt;/strong&gt; and &lt;strong&gt;aggregation&lt;/strong&gt; are covered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data Dictionary:&lt;/strong&gt; data that describes the data. It is a table that includes table name, attribute name, description, data type, constraint, PK/FK, FK referenced table as columns.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User-to-Entity matrix&lt;/strong&gt; basically shows what a specific user can do with different entities.&lt;/p&gt;

&lt;h1 id=&quot;normalization&quot;&gt;&lt;span id=&quot;Normalization&quot;&gt;Normalization&lt;/span&gt;&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Functional Dependency&lt;/strong&gt; is a constraint between two sets of attributes in a relation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UNF&lt;/strong&gt; has repeating groups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1NF&lt;/strong&gt; has no repeating groups.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2NF&lt;/strong&gt; has no partial dependencies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3NF&lt;/strong&gt; has no transitive dependencies on PK.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BCNF&lt;/strong&gt; has no non-CK dependencies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4NF&lt;/strong&gt; has no multivalued dependencies.&lt;/p&gt;

&lt;p&gt;Notice: higher level normal forms satisfied the conditions of lower level normal forms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dependency diagram&lt;/strong&gt; and &lt;strong&gt;decomposition diagram&lt;/strong&gt; are included in this area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lossless-join decomposition&lt;/strong&gt; is normally expected. If R is decomposed into  R1 and R2, and R1 intersect R2 is a superkey of R1 or R2, we can say that this is a lossless-join decomposition.&lt;/p&gt;

&lt;h1 id=&quot;relational-algebra&quot;&gt;&lt;span id=&quot;Relational_Algebra&quot;&gt;Relational Algebra&lt;/span&gt;&lt;/h1&gt;

&lt;div class=&quot;page&quot; title=&quot;Page 2&quot;&gt;
  &lt;div class=&quot;section&quot;&gt;
    &lt;div class=&quot;layoutArea&quot;&gt;
      &lt;div class=&quot;column&quot;&gt;
        &lt;p&gt;
          Some important ones are as follows:
        &lt;/p&gt;
        
        &lt;ul&gt;
          &lt;li&gt;
            Selection
          &lt;/li&gt;
          &lt;li&gt;
            Projection
          &lt;/li&gt;
          &lt;li&gt;
            Union
          &lt;/li&gt;
          &lt;li&gt;
            Intersection
          &lt;/li&gt;
          &lt;li&gt;
            Set difference
          &lt;/li&gt;
          &lt;li&gt;
            Cartesian product
          &lt;/li&gt;
          &lt;li&gt;
            Renaming relations
          &lt;/li&gt;
          &lt;li&gt;
            Theta-join
          &lt;/li&gt;
          &lt;li&gt;
            Natural join
          &lt;/li&gt;
          &lt;li&gt;
            Outer join
          &lt;/li&gt;
          &lt;li&gt;
            Semi-join
          &lt;/li&gt;
          &lt;li&gt;
            Division
          &lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;
          &lt;img class=&quot;alignnone size-medium wp-image-180&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-5.20.21-PM-300x182.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;182&quot; srcset=&quot;/wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-5.20.21-PM-300x182.png 300w, /wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-5.20.21-PM.png 449w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;img class=&quot;alignnone size-medium wp-image-179&quot; src=&quot;/wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-5.20.32-PM-300x167.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;167&quot; srcset=&quot;/wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-5.20.32-PM-300x167.png 300w, /wp-content/uploads/2018/01/Screen-Shot-2018-01-14-at-5.20.32-PM.png 467w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;
        &lt;/p&gt;
        
        &lt;h1&gt;
          &lt;span id=&quot;SQL&quot;&gt;SQL&lt;/span&gt;
        &lt;/h1&gt;
        
        &lt;p&gt;
          SQL can actually be divided into some categories.
        &lt;/p&gt;
        
        &lt;ul&gt;
          &lt;li&gt;
            Data Definition Language (DDL): &lt;em style=&quot;font-size: 1rem;&quot;&gt;CREATE, ALTER, DROP, RENAME&lt;/em&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Data Manipulation Language (DML): &lt;em&gt;INSERT, UPDATE, DELETE, TRUNCATE, MERGE&lt;/em&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Transection Control (TC): &lt;em&gt;COMMIT, ROLLBACK, SAVEPOINT&lt;/em&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Data Retrieval: &lt;em&gt;SELECT&lt;/em&gt;
          &lt;/li&gt;
          &lt;li&gt;
            Data Control Language (DCL): &lt;em&gt;GRANT, REVOKE&lt;/em&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
        
        &lt;p&gt;
          Besides, a very common simple SQL SELECT template is shown below.
        &lt;/p&gt;
        
        &lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;

SELECT column(s), group_function(col.)

FROM table(s)

WHERE row_condition

GROUP BY column(s)

HAVING group_condition

ORDER BY column(s);

&lt;/pre&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><author><name>Lucas</name></author><summary type="html">The main reason for doing this framework is that knowledge points are consistently forgotten if we don’t use them. So, I want to wrap it up in a concise way.</summary></entry><entry><title type="html">95-865 Unstructured Data Analytics</title><link href="https:///Lucas12138.github.io/2017/12/09/95-865-unstructured-data-analytics/" rel="alternate" type="text/html" title="95-865 Unstructured Data Analytics" /><published>2017-12-09T07:45:35-08:00</published><updated>2017-12-09T07:45:35-08:00</updated><id>https:///Lucas12138.github.io/2017/12/09/95-865-unstructured-data-analytics</id><content type="html" xml:base="https:///Lucas12138.github.io/2017/12/09/95-865-unstructured-data-analytics/">&lt;div id=&quot;toc_container&quot; class=&quot;no_bullets&quot;&gt;
  &lt;p class=&quot;toc_title&quot;&gt;
    Contents
  &lt;/p&gt;
  
  &lt;ul class=&quot;toc_list&quot;&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Introduction&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;1&lt;/span&gt; Introduction&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;a href=&quot;#Exploratory_Data_Analysis&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;2&lt;/span&gt; Exploratory Data Analysis&lt;/a&gt;&lt;ul&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Basic_Text_Analysis&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.1&lt;/span&gt; Basic Text Analysis&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Feature_Vector_Co-Occurrence_Analysis_Correlation_Causation&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.2&lt;/span&gt; Feature Vector, Co-Occurrence Analysis, Correlation, Causation&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Visualizing_High-Dimensional_Vectors&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.3&lt;/span&gt; Visualizing High-Dimensional Vectors&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Clustering_with_Generative_Models&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.4&lt;/span&gt; Clustering with Generative Models&lt;/a&gt;&lt;ul&gt;
            &lt;li&gt;
              &lt;a href=&quot;#K-Means&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;2.4.1&lt;/span&gt; K-Means&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Gaussian_Mixture_Model_GMM&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;2.4.2&lt;/span&gt; Gaussian Mixture Model (GMM)&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#DirichletProcess_Gaussian_Mixture_Model_DP-GMM&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;2.4.3&lt;/span&gt; Dirichlet Process Gaussian Mixture Model (DP-GMM)&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#CH_Index_and_Gap_Statistic&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;2.4.4&lt;/span&gt; CH Index and Gap Statistic&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        
        &lt;li&gt;
          &lt;a href=&quot;#Hierarchical_Clustering&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.5&lt;/span&gt; Hierarchical Clustering&lt;/a&gt;&lt;ul&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Divisive_Clustering&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;2.5.1&lt;/span&gt; Divisive Clustering&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Agglomerative_Clustering&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;2.5.2&lt;/span&gt; Agglomerative Clustering&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        
        &lt;li&gt;
          &lt;a href=&quot;#Before_You_Choose_a_Clustering_Method&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.6&lt;/span&gt; Before You Choose a Clustering Method&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Topic_Modeling&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;2.7&lt;/span&gt; Topic Modeling&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
      &lt;a href=&quot;#Predictive_Data_Analysis&quot;&gt;&lt;span class=&quot;toc_number toc_depth_1&quot;&gt;3&lt;/span&gt; Predictive Data Analysis&lt;/a&gt;&lt;ul&gt;
        &lt;li&gt;
          &lt;a href=&quot;#Classification&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;3.1&lt;/span&gt; Classification&lt;/a&gt;&lt;ul&gt;
            &lt;li&gt;
              &lt;a href=&quot;#kNN&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.1.1&lt;/span&gt; kNN&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#SVM&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.1.2&lt;/span&gt; SVM&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#SVM_Kernels&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.1.3&lt;/span&gt; SVM Kernels&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Naive_Bayes&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.1.4&lt;/span&gt; Naive Bayes&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Method_Evaluation&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.1.5&lt;/span&gt; Method Evaluation&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        
        &lt;li&gt;
          &lt;a href=&quot;#Regression&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;3.2&lt;/span&gt; Regression&lt;/a&gt;&lt;ul&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Decision_Trees_for_Classification&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.2.1&lt;/span&gt; Decision Trees for Classification&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Decision_Trees_for_Regression&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.2.2&lt;/span&gt; Decision Trees for Regression&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Random_Forest_and_Extremely_Randomized_Trees&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.2.3&lt;/span&gt; Random Forest and Extremely Randomized Trees&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Boosting&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.2.4&lt;/span&gt; Boosting&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        
        &lt;li&gt;
          &lt;a href=&quot;#Deep_Learning&quot;&gt;&lt;span class=&quot;toc_number toc_depth_2&quot;&gt;3.3&lt;/span&gt; Deep Learning&lt;/a&gt;&lt;ul&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Handwritten_Digit_Demo&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.3.1&lt;/span&gt; Handwritten Digit Demo&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Convolutional_Neural_Network_CNN&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.3.2&lt;/span&gt; Convolutional Neural Network (CNN)&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Recurrent_Neural_Network_RNN&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.3.3&lt;/span&gt; Recurrent Neural Network (RNN)&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Gradient_Descent&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.3.4&lt;/span&gt; Gradient Descent&lt;/a&gt;
            &lt;/li&gt;
            &lt;li&gt;
              &lt;a href=&quot;#Dealing_with_Small_Datasets&quot;&gt;&lt;span class=&quot;toc_number toc_depth_3&quot;&gt;3.3.5&lt;/span&gt; Dealing with Small Datasets&lt;/a&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;

&lt;h1 id=&quot;introduction&quot;&gt;&lt;span id=&quot;Introduction&quot;&gt;Introduction&lt;/span&gt;&lt;/h1&gt;

&lt;p&gt;This is what I learned in a CMU course, 95-865 Unstructured Data Analytics, from &lt;a href=&quot;http://www.andrew.cmu.edu/user/georgech/&quot;&gt;George Chen&lt;/a&gt;. I learned clustering, topic modeling, classification, regression, deep learning and method evaluation methods. I did assignments about Zipf’s Law with spaCY, mobile applications analysis with LDA, email spam detection with kNN, Bernoulli Naive Bayes and SVM, tweet sentiment analysis with RNN, image segmentation with CNN. Because some datasets are extremely large, AWS was introduced as well.&lt;/p&gt;

&lt;p&gt;I have to say it’s a very good combination of theory and practice. I did learn a lot from this course.&lt;/p&gt;

&lt;h1 id=&quot;exploratory-data-analysis&quot;&gt;&lt;span id=&quot;Exploratory_Data_Analysis&quot;&gt;Exploratory Data Analysis&lt;/span&gt;&lt;/h1&gt;

&lt;h2 id=&quot;basic-text-analysis&quot;&gt;&lt;span id=&quot;Basic_Text_Analysis&quot;&gt;Basic Text Analysis&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;The very first step could be extracting words from the document. Then we will have a simple term frequencies table. Normally, the order of the words doesn’t matter. It’s like putting the words into a bag, also known as &lt;strong&gt;Bag of Words Model&lt;/strong&gt;. We can also apply this technique to many documents and we call the resulting term frequencies &lt;strong&gt;collection term frequency (ctf)&lt;/strong&gt;. From the frequencies, we can find some interesting probability distributions which are a key component to the success of many modern AI methods.&lt;/p&gt;

&lt;p&gt;In text analysis, we need to think about &lt;strong&gt;stop words&lt;/strong&gt;. Usually, we should remove them. But, sometimes we’d better keep them. For example, &lt;em&gt;“To be or not to be”&lt;/em&gt;. Also, there may be words that have same meaning, like “The” and “the”, “walk” and “walking”, “democracy” and “democratization” etc. Merging them together is called &lt;strong&gt;lemmatization&lt;/strong&gt;. On the other hand, one word may have multiple meanings. So, we may want to split it up to multiple words. This problem is called word sense &lt;strong&gt;disambiguation (WSD)&lt;/strong&gt;. Some conventional methods to deal with it are knowledge-based methods, semi-supervised methods, supervised methods and unsupervised methods. Besides, we should treat some phrases as a single word, such as “United States”.&lt;/p&gt;

&lt;p&gt;Some other common NLP tasks include &lt;strong&gt;tokenization&lt;/strong&gt;(find atomic words), &lt;strong&gt;part-of-speech tagging&lt;/strong&gt;(find nouns, verbs, etc.), &lt;strong&gt;sentence recognition&lt;/strong&gt;(figure out when a sentence ends) etc.&lt;/p&gt;

&lt;p&gt;So far, if we use only one word as element of our model. It’s called &lt;strong&gt;unigram&lt;/strong&gt; model. This model may have some problems. Because it ignores word order and word agreement. For example, P(w = hello world) = P(w = hello) * P(w = world) = P(w = world hello). Word agreement means it cannot distinguish good sentences and bad sentences, such as P(w = i am … we are …) = P(w = i are … we am …). For this problem, we can use &lt;strong&gt;bigram&lt;/strong&gt; or &lt;strong&gt;n-gram&lt;/strong&gt; models. It means we can use 2 or more words as element. We can solve the problems and increase the vocabulary size dramatically at the same time.&lt;/p&gt;

&lt;p&gt;For NLP, python has a good open-source library called &lt;strong&gt;spaCy&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;feature-vector-co-occurrence-analysis-correlation-causation&quot;&gt;&lt;span id=&quot;Feature_Vector_Co-Occurrence_Analysis_Correlation_Causation&quot;&gt;Feature Vector, Co-Occurrence Analysis, Correlation, Causation&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Now, we want to process the term frequencies table a little bit. We represent terms as “features” and use frequencies as values. Then we can get a &lt;strong&gt;feature vector&lt;/strong&gt;, like this [0.1, 0.3, 0.2, 0.4] representing “sunny”, “cloudy”, “rainy”, “snowy”.&lt;/p&gt;

&lt;p&gt;We may find words in text often seem to have some kind of relationship. For example, “Tim Cook” and “Apple”, “Elon Mush” and “Tesla”. We can use &lt;strong&gt;co-occurrences&lt;/strong&gt; to figure it out. But, speaking of co-occurrences, there’re also many approaches. We can count the number of lines in which two entities co-occur. We can count the number of paragraphs, documents etc. as well. We should use the approach which makes the most sense in the specific case.&lt;/p&gt;

&lt;p&gt;Here’s a use case of co-occurrences.&lt;/p&gt;

&lt;p&gt;Assume we are looking at a picture of zebra and grass and there’re only black, white and green pixels. Then we start counting: for each pixel, look at 4 neighboring pixels, compare the values and add the values to a table.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone wp-image-101&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-1.16.07-PM-300x75.png&quot; alt=&quot;&quot; width=&quot;348&quot; height=&quot;87&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-1.16.07-PM-300x75.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-1.16.07-PM-768x192.png 768w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-1.16.07-PM.png 785w&quot; sizes=&quot;(max-width: 348px) 100vw, 348px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, think of the bag of words model. We take [green, green], [green, white], [green, black]… into the bag. There will be 5750 cards in the bag. And we can calculate the probabilities of P(green, white), P(white, black), P(white) etc.&lt;/p&gt;

&lt;p&gt;Then we can use &lt;strong&gt;pointwise mutual information (PMI)&lt;/strong&gt; to measure surprise. The higher PMI means more surprising. The formula for PMI is as follows.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-102&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-1.29.21-PM-300x118.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;118&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-1.29.21-PM-300x118.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-1.29.21-PM.png 353w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;P(A, B) represents A and B co-occurring. P(A) is A occurring. P(B) is B occurring. If A and B are independent, P(A, B) = P(A) P(B) and PMI = 0.&lt;/p&gt;

&lt;p&gt;In practice, it’s helpful to generalize PMI. We can add a positive tune parameter to it.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-106&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-8.19.13-PM-300x92.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;92&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-8.19.13-PM-300x92.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-8.19.13-PM.png 375w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PMI is used to measure one pair of entities. To measure all pairs we can use &lt;strong&gt;Phi-square&lt;/strong&gt; and &lt;strong&gt;Chi-square&lt;/strong&gt;. Its formula is as follows.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-105&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-8.07.56-PM-300x83.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;83&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-8.07.56-PM-300x83.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-23-at-8.07.56-PM.png 458w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Chi-square = N * Phi-square, where N is the total number of occurrences like 5750 cards before.&lt;/p&gt;

&lt;p&gt;Then we can use simple &lt;strong&gt;scatter plot&lt;/strong&gt; to look if there’s any pattern in data. It can be negatively correlated, positively correlated or not really correlated. But two variable being correlated doesn’t mean one can predict another.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Correlation&lt;/strong&gt; is not &lt;strong&gt;causation&lt;/strong&gt;. For example, sunspot number and number of Republican senators may be highly correlated. But they are totally not related things. There’s no causation between them. To find real causality, we should divide users into 2 groups, &lt;strong&gt;treatment group&lt;/strong&gt; and &lt;strong&gt;control group&lt;/strong&gt;. Then we can use &lt;strong&gt;randomized controlled trial (RCT)&lt;/strong&gt;, also called &lt;strong&gt;A/B testing&lt;/strong&gt;. Amazon is using this method to figure out webpage layout to maximize revenue. Khan Academy is using this to find out how to present materials to improve learning.&lt;/p&gt;

&lt;p&gt;Besides, what is the difference between probability theory and statistics?&lt;/p&gt;

&lt;p&gt;Probability theory:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Assume we know model of randomness and parameters&lt;/li&gt;
  &lt;li&gt;Reason about what happens in the model, what data X look like&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Statistics:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Assume we collect data X&lt;/li&gt;
  &lt;li&gt;Reason about what model of randomness make sense, and what the parameters are&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;visualizing-high-dimensional-vectors&quot;&gt;&lt;span id=&quot;Visualizing_High-Dimensional_Vectors&quot;&gt;Visualizing High-Dimensional Vectors&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;We live in a 3-dimensional space. It can be very hard for us to imagine high-dimensional data. So, to gain some insights, we need to reduce the dimensionality to 1, 2, or 3.&lt;/p&gt;

&lt;p&gt;One common linear approach is &lt;strong&gt;principal component analysis (PCA)&lt;/strong&gt;. It basically flattens the data to lower dimensionality. For example, from 2D to 1D, we can squeeze data to one line. In that case, there’re 360 degrees. It is about finding the line that ensures the most variability. PCA is about finding top k orthogonal directions that explain the most variance in the data. Here is a visualization &lt;a href=&quot;http://setosa.io/ev/principal-component-analysis/&quot;&gt;example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But, what if the data is extremely non-linear distributed. Imagine a Swiss Roll. PCA won’t work well in this case. Then we should use some non-linear dimensionality reduction techniques, like finding low-dimensional “manifold” which is called &lt;strong&gt;manifold learning&lt;/strong&gt;. 2 specific approaches for manifold learning are &lt;strong&gt;Isomap&lt;/strong&gt; and &lt;strong&gt;t-SNE&lt;/strong&gt;. Isomap is about calculating the distance between data points and finding nearest neighbors. t-SNE represents t-distributed stochastic neighbor embedding. One significant difference between Isomap and t-SNE is that t-SNE doesn’t use deterministic definition of which points are neighbors. It uses probabilistic notation instead. Points similarity probability distribution will help here. It improves the low-dimensional distribution representation until it’s as close as the original one as possible.&lt;/p&gt;

&lt;p&gt;Normally, PCA and t-SNE are good candidates for your first try. They cover both linear and non-linear potentiality.&lt;/p&gt;

&lt;h2 id=&quot;clustering-with-generative-models&quot;&gt;&lt;span id=&quot;Clustering_with_Generative_Models&quot;&gt;Clustering with Generative Models&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Clustering is a highly useful process, which can divide entities into different groups. One example is recommendation system, where clustering can give different recommendations to different clusters. We can build a user-item matrix and figure out the similarity among users.&lt;/p&gt;

&lt;p&gt;In terms of similarity, there’s usually not a “best” way to define it. There’re 2 popular methods for it, &lt;strong&gt;cosine similarity&lt;/strong&gt; and &lt;strong&gt;Euclidean distance&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cosine similarity:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-109&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-24-at-10.06.22-AM-300x79.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;79&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-24-at-10.06.22-AM-300x79.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-24-at-10.06.22-AM.png 481w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Euclidean distance:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-110&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-24-at-10.12.35-AM-300x69.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;69&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-24-at-10.12.35-AM-300x69.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-24-at-10.12.35-AM.png 512w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For comparing similarities of &lt;strong&gt;time series&lt;/strong&gt;, we need to align them first. Think of shifting one along x-axis to align with another. Then the distance can be the area between the two.&lt;/p&gt;

&lt;p&gt;To &lt;strong&gt;diagnose&lt;/strong&gt; the similarity function’s result, we can pick one data point and compute its similarity with all the other points. Find out the highest one. Look if you can interpret them. If not, the similarity function isn’t very good.&lt;/p&gt;

&lt;p&gt;Let’s move from similarity to clusters. There’re two main clustering methods, &lt;strong&gt;generative models&lt;/strong&gt; and &lt;strong&gt;hierarchical clustering&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Generative models mean we first pretend the data generated by specific model with parameters. Learn the parameters(“fit” model to data). Then use fitted model to determine cluster assignments.&lt;/p&gt;

&lt;p&gt;Hierarchical clustering won’t assume any model. It starts with all data points in one cluster then decide on how to split or start with all points in its own cluster and then merge them. In short, it can be top-down or bottom-up.&lt;/p&gt;

&lt;p&gt;We will talk about generative models first, then hierarchical clustering.&lt;/p&gt;

&lt;h3 id=&quot;k-means&quot;&gt;&lt;span id=&quot;K-Means&quot;&gt;K-Means&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;K-means belongs to generative models. We need to decide how many clusters we want first, which is k. Then it will guess where the centers of cluster are. Assign each point to belong to the closest cluster and update cluster means. Repeat this process until convergence.&lt;/p&gt;

&lt;p&gt;In other words, it repeat find the closest centroid -&amp;gt; update centroid process until it finds the perfect centroids. Here is a &lt;a href=&quot;http://stanford.edu/class/ee103/visualizations/kmeans/kmeans.html&quot;&gt;visualization&lt;/a&gt; of it. Obviously, k matters a lot here.&lt;/p&gt;

&lt;p&gt;It is suggested to incrementally add centers and add them far from existing centers.&lt;/p&gt;

&lt;h3 id=&quot;gaussian-mixture-model-gmm&quot;&gt;&lt;span id=&quot;Gaussian_Mixture_Model_GMM&quot;&gt;Gaussian Mixture Model (GMM)&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Gaussian mixture model is also a generative model. It assumes data points sampled independently from different Gaussian distributions. Each Gaussian distribution can be treated as a cluster.&lt;/p&gt;

&lt;p&gt;For GMM, learning (“fitting”) the parameters is about data points and k as input, mean, covariance of each gaussian distribution as output.&lt;/p&gt;

&lt;p&gt;GMM uses &lt;strong&gt;EM(Expectation-Maximization) algorithm&lt;/strong&gt;. In simple words, EM is repeating calculating expectation and maximize expectation. Unlike k-means, which hard assigns each point to clusters, EM does a soft assignment probabilistically.&lt;/p&gt;

&lt;p&gt;Normally, k-means doesn’t work as well as GMM if the ellipses are not typical circles.&lt;/p&gt;

&lt;h3 id=&quot;dirichletprocess-gaussian-mixture-model-dp-gmm&quot;&gt;&lt;span id=&quot;DirichletProcess_Gaussian_Mixture_Model_DP-GMM&quot;&gt;Dirichlet Process Gaussian Mixture Model (DP-GMM)&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Dirichlet process is one of the stochastic processes. It is a probability distribution of probability distribution.&lt;/p&gt;

&lt;p&gt;For DP-GMM, you don’t have to decide on k manually. Number of clusters is effectively random and can grow with the data amount. But, you will need to choose a different parameter which indicates how likely new points are to form new clusters vs join existing clusters.&lt;/p&gt;

&lt;p&gt;We can also apply Dirichlet process to k-means. Then it will be &lt;strong&gt;DP-means&lt;/strong&gt;. It also has another parameter, which is the square of the radius around one data point to decide on how to divide the clusters.&lt;/p&gt;

&lt;h3 id=&quot;ch-index-and-gap-statistic&quot;&gt;&lt;span id=&quot;CH_Index_and_Gap_Statistic&quot;&gt;CH Index and Gap Statistic&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;We can also choose a cost function to compute for different k. The pick the k which achieved the lowest cost.&lt;/p&gt;

&lt;p&gt;One approach with flaw is &lt;strong&gt;Residual Sum of Squares (RSS)&lt;/strong&gt;. For each cluster, we can calculate a RSS. Finally, we can sum RSS of the k clusters. But, why it is not a very good approach? Think of each data point is a cluster. The RSS will be 0. RSS measures with-in cluster variation.&lt;/p&gt;

&lt;p&gt;A better approach is considering both RSS and between-cluster variation.&lt;/p&gt;

&lt;p&gt;Let W = RSS,&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-117&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.19.27-PM-300x80.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;80&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.19.27-PM-300x80.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.19.27-PM.png 433w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;n = total number of points&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-116&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.20.07-PM.png&quot; alt=&quot;&quot; width=&quot;195&quot; height=&quot;59&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This approach is called &lt;strong&gt;CH index&lt;/strong&gt;,&lt;strong&gt; &lt;/strong&gt;where CH stands for &lt;span style=&quot;font-size: 1rem;&quot;&gt;Calinski and Harabasz.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Another good approach is &lt;strong&gt;gap statistic&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-118&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.30.31-PM-300x59.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;59&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.30.31-PM-300x59.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.30.31-PM.png 338w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It uses &lt;strong&gt;Mean Squared Error (MSE)&lt;/strong&gt; and &lt;strong&gt;Maximum Likelihood Estimation (MLE)&lt;/strong&gt;. Here’s a paper about &lt;a href=&quot;https://web.stanford.edu/~hastie/Papers/gap.pdf&quot;&gt;gap statistic&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;hierarchical-clustering&quot;&gt;&lt;span id=&quot;Hierarchical_Clustering&quot;&gt;Hierarchical Clustering&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Let’s move on from generative models to hierarchical clustering.&lt;/p&gt;

&lt;h3 id=&quot;divisive-clustering&quot;&gt;&lt;span id=&quot;Divisive_Clustering&quot;&gt;Divisive Clustering&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;This method firstly assumes all data points in one cluster. Then use a method to split the cluster(e.g., k-means, k=2). Then decide on the next cluster to split(e.g., pick the cluster with highest RSS). Repeat this process until some termination condition is reached.&lt;/p&gt;

&lt;h3 id=&quot;agglomerative-clustering&quot;&gt;&lt;span id=&quot;Agglomerative_Clustering&quot;&gt;Agglomerative Clustering&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Agglomerative clustering basically is a reverse version of divisive clustering. It first assumes each point is a cluster. Then find the most “similar” two clusters(e.g., pick pair of clusters which have closest cluster center). Then merge them.Repeat this process until some termination condition is reached.&lt;/p&gt;

&lt;p&gt;There’re many ways to define “close” in agglomerative clustering. They are &lt;strong&gt;single linkage&lt;/strong&gt;, &lt;strong&gt;complete linkage&lt;/strong&gt;, &lt;strong&gt;centroid linkage&lt;/strong&gt;, &lt;strong&gt;average linage&lt;/strong&gt;. Basically, they calculate the distance of nearest points, farthest points, centers, each point and average it between clusters, respectively. For the first two, clustering stays the same with monotonic transform. For the last two, clustering may change. They are not perfect. They fit different cases.&lt;/p&gt;

&lt;p&gt;Finally, these two can be visualized with a &lt;strong&gt;dendrogram&lt;/strong&gt;. Like this.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-121&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.52.19-PM-300x178.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;178&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.52.19-PM-300x178.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-2.52.19-PM.png 676w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;before-you-choose-a-clustering-method&quot;&gt;&lt;span id=&quot;Before_You_Choose_a_Clustering_Method&quot;&gt;Before You Choose a Clustering Method&lt;/span&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;There’re some questions to think about.&lt;/li&gt;
  &lt;li&gt;Does Euclidean distance make sense?&lt;/li&gt;
  &lt;li&gt;Do you care about which cluster the new points belong to?&lt;/li&gt;
  &lt;li&gt;After visualization, do the clusters seem interpretable?&lt;/li&gt;
  &lt;li&gt;Compare the cluster centers, do they look reasonable?&lt;/li&gt;
  &lt;li&gt;How would you like to measure the result of clustering?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;topic-modeling&quot;&gt;&lt;span id=&quot;Topic_Modeling&quot;&gt;Topic Modeling&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;In real-world cases, clustering is often not enough. One data point may belong to several clusters. For example, two users may share one Netflix account. Then we prefer assigning data points to multiple topics. This process is called &lt;strong&gt;topic modeling&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ai.stanford.edu/~ang/papers/jair03-lda.pdf&quot;&gt;&lt;strong&gt;Latent Dirichlet Allocation (LDA)&lt;/strong&gt;&lt;/a&gt; is a topic modeling approach. The basic idea is that documents are represented as random mixtures over latent topics, where each topic is characterized by a distribution of words.&lt;/p&gt;

&lt;p&gt;For LDA, the input is a “document-word” matrix and a pre-specified number of topics k. And the output will be what the k topics are, which is also k topics’ distribution of words.&lt;/p&gt;

&lt;p&gt;“document-word” matrix -&amp;gt; “topic-document” matrix -&amp;gt; “word-topic” matrix&lt;/p&gt;

&lt;p&gt;So, what if we want to automatically select k? The Bayesian nonparametric variant of LDA is &lt;strong&gt;Hierarchical Dirichlet Process(HDP)&lt;/strong&gt;. It’s similar with GMM to DP-GMM.&lt;/p&gt;

&lt;p&gt;There’re also some methods to measure the result. For a specific topic, look at &lt;em&gt;m&lt;/em&gt; most probable words(“top words”):&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-124&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-8.02.27-PM-300x116.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;116&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-8.02.27-PM-300x116.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-8.02.27-PM-768x297.png 768w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-26-at-8.02.27-PM.png 849w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Beyond LDA and HDP, there’re also many other topic modeling methods. For example, correlated topic models, Pachinko allocation, biterm topic models, anchor word topic models, dynamic topic models…&lt;/p&gt;

&lt;h1 id=&quot;predictive-data-analysis&quot;&gt;&lt;span id=&quot;Predictive_Data_Analysis&quot;&gt;Predictive Data Analysis&lt;/span&gt;&lt;/h1&gt;

&lt;h2 id=&quot;classification&quot;&gt;&lt;span id=&quot;Classification&quot;&gt;Classification&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;One main difference between classification and clustering is that, in terms of classification, data have labels. It’s thereby supervised. And clustering is unsupervised.&lt;/p&gt;

&lt;p&gt;Labeled data: {(x1, y1), (x2, y2), (x3, y3)…}, where y stands for label.&lt;/p&gt;

&lt;p&gt;The labels have some types.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Binary: yi belongs to {0, 1}&lt;/li&gt;
  &lt;li&gt;Multi-class: yi belongs to {cat, dog, fish…}&lt;/li&gt;
  &lt;li&gt;Multi-label: yi belongs to {(cat, dog), (car, bike)…}&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, there are many kinds of classification models.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linear function&lt;/li&gt;
  &lt;li&gt;Tree-based&lt;/li&gt;
  &lt;li&gt;Nearest-neighbor&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;knn&quot;&gt;&lt;span id=&quot;kNN&quot;&gt;kNN&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;NN simply represents Nearest-neighbor. The training data will be like {(x1, y1), (x2, y2)…}. Then given a test point, say (xi, yi), it will compare its k neighbors. There will be a majority vote first. The test point will be classified to the majority type. But if the number of votes between different classes are equal. The algorithm will break the tie randomly.&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&quot;http://ieeexplore.ieee.org/document/1053964/&quot;&gt;Cover and Hart&lt;/a&gt;, if the optimal classifier is with error &lt;em&gt;e&lt;/em&gt;, 1-NN with k = 1 will have error less than 2&lt;em&gt;e&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;svm&quot;&gt;&lt;span id=&quot;SVM&quot;&gt;SVM&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;SVM is a linear classifier. It assumes the data is linearly separable and the goal is to find the best linear separator. To measure how good is the separator, it calculates the &lt;strong&gt;margin&lt;/strong&gt;. The margin is &lt;span style=&quot;font-size: 1rem;&quot;&gt;perpendicular distance between the separator and the nearest data point. The goal can also be interpreted as finding &lt;/span&gt;minimum margin separator.&lt;span style=&quot;font-size: 1rem;&quot;&gt; &lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;svm-kernels&quot;&gt;&lt;span id=&quot;SVM_Kernels&quot;&gt;SVM Kernels&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;What if we want to separate non-linearly separable data points?&lt;/p&gt;

&lt;p&gt;Using kernels!&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-126&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-27-at-12.55.48-AM-300x141.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;141&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-27-at-12.55.48-AM-300x141.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-27-at-12.55.48-AM.png 311w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The rough idea is basically taking data into higher dimension by kernel methods. Then the data may be linearly separable in higher dimension.&lt;/p&gt;

&lt;p&gt;Some example kernels are as follows:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-127&quot; src=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-27-at-1.00.21-AM-300x90.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;90&quot; srcset=&quot;/wp-content/uploads/2017/11/Screen-Shot-2017-11-27-at-1.00.21-AM-300x90.png 300w, /wp-content/uploads/2017/11/Screen-Shot-2017-11-27-at-1.00.21-AM.png 574w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;naive-bayes&quot;&gt;&lt;span id=&quot;Naive_Bayes&quot;&gt;Naive Bayes&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Unlike kNN calculating by distance and SVM calculating by margin, Naive Bayes takes advantage of probability theory, Bayes’ Theorem specifically.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-aidl&quot;&gt;P(h|d) = (P(d|h) * P(h)) / P(d)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;P(h|d)&lt;/strong&gt; is the probability of hypothesis h given the data d. This is called the posterior probability.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;P(d|h)&lt;/strong&gt; is the probability of data d given that the hypothesis h was true.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;P(h)&lt;/strong&gt; is the probability of hypothesis h being true (regardless of the data). This is called the prior probability of h.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;P(d)&lt;/strong&gt; is the probability of the data (regardless of the hypothesis).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, how does this theorem help? Let me give you an example.&lt;/p&gt;

&lt;p&gt;Assume we are classifying people as male or female. And we have the features like long hair or not, higher than 170cm or not. Then one possible feature vector can be v = [0, 1], which means short hair and higher than 170cm.&lt;/p&gt;

&lt;p&gt;Then based on the theorem,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-aidl&quot;&gt;p(male|v) = p(v|male) * p(male) / p(v)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will be feasible to calculate. Also, if we are using this approach, one important assumption is that it assumes each feature is conditionally independent of others.&lt;/p&gt;

&lt;p&gt;Then we can use this model the fit parameters, predict and smooth the results.&lt;/p&gt;

&lt;h3 id=&quot;method-evaluation&quot;&gt;&lt;span id=&quot;Method_Evaluation&quot;&gt;Method Evaluation&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;There’re some steps to evaluate the previous models.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Data preparation:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A simple method is splitting data randomly into &lt;strong&gt;train&lt;/strong&gt;, &lt;strong&gt;validation&lt;/strong&gt; and &lt;strong&gt;test&lt;/strong&gt;. And the split can be stratified based on the label.&lt;/p&gt;

&lt;p&gt;To avoid wasting valuable training data, we can use another method, which is called k-Fold Cross-Validation. It will split data randomly into &lt;strong&gt;train&lt;/strong&gt; and &lt;strong&gt;test&lt;/strong&gt;. Then it will split train data randomly into k equal folds. It will train on one fold and validate on the remaining folds for k times. Finally, it will average the k metrics from each fold.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hyperparameter Selection:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The difference between hyperparameter and parameter is that parameters will be learned automatically by machine. However, hyperparameter is set by human based on experience. The common approach is to define a “well-spaced grid” of hyperparameter values and select the one with the best performance.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Performance Metrics:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So how to measure the performance? Only using accuracy may not be a very good approach. There are better ones, like &lt;strong&gt;precision-recall&lt;/strong&gt; and &lt;strong&gt;f1-score&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Confusion Matrix:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-133&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.26-AM-300x141.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;141&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.26-AM-300x141.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.26-AM.png 573w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can calculate precision-recall and f1-score as follows.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-132&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.38-AM-300x149.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;149&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.38-AM-300x149.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.38-AM.png 530w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-131&quot; style=&quot;font-size: 1rem;&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.50-AM-300x159.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;159&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.50-AM-300x159.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-12.59.50-AM.png 543w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Normally, the higher the precision, recall and f1-score are means the better performance.&lt;/p&gt;

&lt;h2 id=&quot;regression&quot;&gt;&lt;span id=&quot;Regression&quot;&gt;Regression&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Before we move on from classification to regression, what is the difference between them? For classification, the output variable takes class labels. For regression, the output variable takes continuous values.&lt;/p&gt;

&lt;p&gt;kNN is normally used for classification. But, actually, with a regression kernel, we can change the discrete label to continuous label. For example, it’s possible to change {spam, ham} to range(1, 10).&lt;/p&gt;

&lt;h3 id=&quot;decision-trees-for-classification&quot;&gt;&lt;span id=&quot;Decision_Trees_for_Classification&quot;&gt;Decision Trees for Classification&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;The general approach of decision trees looks like the idea of divisive clustering but accounts for labels.&lt;/p&gt;

&lt;p&gt;It firstly picks a random feature and finds the threshold that makes the data as separate as possible. For each side, recurse until a termination condition is reached. The data will look like separated in many leaf cells.&lt;/p&gt;

&lt;p&gt;The prediction of a test point can be determined by majority vote of training point in the same leaf cell.&lt;/p&gt;

&lt;h3 id=&quot;decision-trees-for-regression&quot;&gt;&lt;span id=&quot;Decision_Trees_for_Regression&quot;&gt;Decision Trees for Regression&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;It’s very easy for decision trees to move from classification to regression. Except for, in the prediction part, it will predict by average in the same leaf cell.&lt;/p&gt;

&lt;p&gt;To choose what kind of decision trees to use, we can refer to this picture.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone wp-image-134&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-1.53.45-AM-300x249.png&quot; alt=&quot;&quot; width=&quot;328&quot; height=&quot;272&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-1.53.45-AM-300x249.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-06-at-1.53.45-AM.png 531w&quot; sizes=&quot;(max-width: 328px) 100vw, 328px&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;random-forest-and-extremely-randomized-trees&quot;&gt;&lt;span id=&quot;Random_Forest_and_Extremely_Randomized_Trees&quot;&gt;Random Forest and Extremely Randomized Trees&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Typically, a decision tree is learned randomly. Therefore, by re-running the same learning procedure, we can get different decision trees and different predictions.&lt;/p&gt;

&lt;p&gt;Then we can aggregate the prediction results from different trees. The performance will be better if we add randomness.&lt;/p&gt;

&lt;p&gt;Random Forest:&lt;/p&gt;

&lt;p&gt;In addition to randomly choosing features to threshold, it also randomizes training data used for each tree.&lt;/p&gt;

&lt;p&gt;Extremely randomized trees:&lt;/p&gt;

&lt;p&gt;It further randomizes thresholds rather than trying to pick clever thresholds.&lt;/p&gt;

&lt;h3 id=&quot;boosting&quot;&gt;&lt;span id=&quot;Boosting&quot;&gt;Boosting&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;The basic idea of boosting is leaning trees sequentially and learning from previous trees’ mistakes. It will weight trees unequally, so bad trees are down-weighted.&lt;/p&gt;

&lt;p&gt;There’re different boosting methods. Some popular ones are &lt;strong&gt;AdaBoost&lt;/strong&gt; and &lt;strong&gt;gradient tree boosting&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;deep-learning&quot;&gt;&lt;span id=&quot;Deep_Learning&quot;&gt;Deep Learning&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Big data, better hardware and better algorithms are the three pillars of deep learning. With the improvement of those technologies, deep learning grows fast. People are talking more and more about deep learning.&lt;/p&gt;

&lt;p&gt;But, how deep learning works? Given an image of a cat, it will extract different features like edges, texture, colors. And then it will assemble them to segment and part. Then finally,  it will learn it as a cat.&lt;/p&gt;

&lt;p&gt;For different kind of data, we should choose different neural network architectures. Like for &lt;strong&gt;image analysis&lt;/strong&gt;, &lt;strong&gt;Convolutional Neural Network(CNN)&lt;/strong&gt; works well. And for &lt;strong&gt;time series analysis&lt;/strong&gt;, &lt;strong&gt;Recurrent Neural Network(RNN)&lt;/strong&gt; has good performence.&lt;/p&gt;

&lt;h3 id=&quot;handwritten-digit-demo&quot;&gt;&lt;span id=&quot;Handwritten_Digit_Demo&quot;&gt;Handwritten Digit Demo&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;This demo is pretty much used everywhere. It’s kind of deep learning’s hello world. In this part, I would like to explain in the code.&lt;/p&gt;

&lt;pre class=&quot;brush: python; title: ; notranslate&quot; title=&quot;&quot;&gt;%matplotlib inline
import matplotlib.pyplot as plt
import numpy as np

from keras.datasets import mnist
from keras import models
from keras import layers

# loading data
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()
# train_images.shape -&amp;amp;gt; (60000, 28, 28)
# test_images.shape -&amp;amp;gt; (10000, 28, 28)
# train_labels.shape -&amp;amp;gt; (60000,)
# test_labels.shape -&amp;amp;gt; (10000,)

# flatten 28 * 28 data to 784 * 1 data
# it will be easier for neural network to learn the parameters
# input shape will be (784,) and it's also called 784 input neurons
flattened_train_images = train_images.reshape(len(train_images), -1) # flattens out each training image
flattened_test_images = test_images.reshape(len(test_images), -1) # flattens out each test image
# train_images.shape -&amp;amp;gt; (60000, 784)
# test_images.shape -&amp;amp;gt; (10000, 784)

flattened_train_images = flattened_train_images.astype(np.float32) / 255 # rescale to be between 0 and 1
flattened_test_images = flattened_test_images.astype(np.float32) / 255 # rescale to be between 0 and 1
# to_categorical is basically change the label to higher dimension
# in this case, there're 10 labels(0-9)
# so, this method will change them to 10 dimension and there will be only 0 and 1
from keras.utils import to_categorical
train_labels_categorical = to_categorical(train_labels)
test_labels_categorical = to_categorical(test_labels)
# for example:
# train_labels[6] -&amp;amp;gt; 5
# train_labels_categorical -&amp;amp;gt; array([ 0., 0., 0., 0., 0., 1., 0., 0., 0., 0.])

# two-layer model
two_layer_model = models.Sequential() # this is Keras's way of specifying a model that is a single sequence of layers
# only specify input_shape in the first layer
# following layers will figure it out automatically
# passing data to dense layer is basically compress the data
# each neuron in dense layer has different calculating ways
# this process will parameterized the input data to a weighted matrix(W) and bias(b)
# activation is kind of post-process for the learned parameters
two_layer_model.add(layers.Dense(512, activation='relu', input_shape=(784,)))
# total learned parameters number in first layer will be 784 * 512(W) + 512(b) = 401920
two_layer_model.add(layers.Dense(10, activation='softmax'))
# total learned parameters number in second layer will be 512 * 10(W) + 10(b) = 5130
# then we will need to choose the optimizer, loss function and metrics
two_layer_model.compile(optimizer='rmsprop',
loss='categorical_crossentropy',
metrics=['accuracy'])
two_layer_model.summary() # display the summary of the neural network

# epochs is how many times we train the model or the model learn the parameters
# batch_size is kind of buffer, a batch of data to put into training or learning
two_layer_model.fit(flattened_train_images, train_labels_categorical, epochs=5, batch_size=128)

# evaluation and print out accuracy
test_loss, test_acc = two_layer_model.evaluate(flattened_test_images, test_labels_categorical)
print('Test accuracy:', test_acc)

&lt;/pre&gt;

&lt;h3 id=&quot;convolutional-neural-network-cnn&quot;&gt;&lt;span id=&quot;Convolutional_Neural_Network_CNN&quot;&gt;Convolutional Neural Network (CNN)&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;The basic idea of CNN is quite straight-forward. It’s baiscally using a &lt;strong&gt;filter&lt;/strong&gt;(or &lt;strong&gt;kernel&lt;/strong&gt;) to scan the image, from left to right, top to down. It will calculate the dot product and finally output a smaller image.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-150&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-09-at-6.32.05-PM-300x183.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;183&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-09-at-6.32.05-PM-300x183.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-09-at-6.32.05-PM.png 514w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Different kernels may have different values, which gives them different functions. For example, it can be used for blurring an image or finding horizontal edges. And the kernels are actually unknown and are learned.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-149&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-09-at-6.32.36-PM-300x187.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;187&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-09-at-6.32.36-PM-300x187.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-09-at-6.32.36-PM.png 527w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Input image’s dimensions include height, width and depth(number of channels, e.g. RGB can be viewed as 3 channels). And after the conv2d layer, which has k kernels of 3x3xd, the output will be a stack of images, also known as feature maps. Output dimensions include height, width and k. And the k will be the next layer’s channel or depth.&lt;/p&gt;

&lt;p&gt;Then, normally, there will be a pooling process to aggregate local information and produce a smaller image. &lt;strong&gt;Max pooling&lt;/strong&gt; is one popular pooling method. It’s simply select the maximum value.&lt;/p&gt;

&lt;p&gt;conv2d plus max pooling equals the basic building block of CNN. We can add many this kind of blocks. From the first block to the last block, it extracts from low-level to high-level visual features and aggregate. Finally, there may be a dense, ReLU and a dense, softmax, which are non-vision-specific classification neural net and loss function calculation.&lt;/p&gt;

&lt;h3 id=&quot;recurrent-neural-network-rnn&quot;&gt;&lt;span id=&quot;Recurrent_Neural_Network_RNN&quot;&gt;Recurrent Neural Network (RNN)&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;RNN’s basic idea is feeding output at previous time step as input to RNN layer at current time step. Given this idea, it performs well in handling timer series problems.&lt;/p&gt;

&lt;p&gt;Two common RNN layers in keras are &lt;strong&gt;SimpleRNN&lt;/strong&gt; and &lt;strong&gt;LSTM&lt;/strong&gt;. The difference between these two is that LSTM has a longer memory.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A standard RNN:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-152&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.31-AM-300x107.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;107&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.31-AM-300x107.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.31-AM-768x274.png 768w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.31-AM.png 795w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;LSTM:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone wp-image-151&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.42-AM-300x98.png&quot; alt=&quot;&quot; width=&quot;312&quot; height=&quot;102&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.42-AM-300x98.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.42-AM-768x251.png 768w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-12.25.42-AM.png 861w&quot; sizes=&quot;(max-width: 312px) 100vw, 312px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;RNN is likely to play with other neural networks. For example, dealing with video, it will put a CNN before RNN naturally and add a dense layer as classifier at the end. For text sentiment analysis, we should put an &lt;strong&gt;embedding layer&lt;/strong&gt; (common approaches for this include word2vec and GloVe) before RNN, which will turn words into vector representations that are semantically meaningful, followed by a dense layer as classifier as well.&lt;/p&gt;

&lt;p&gt;By the way, for classification with more than 2 classes, it’s better to use a dense layer with multiple neurons and softmax activation. For classification of 2 classes, it’s better to use a dense layer with one neuron and sigmoid activation.&lt;/p&gt;

&lt;h3 id=&quot;gradient-descent&quot;&gt;&lt;span id=&quot;Gradient_Descent&quot;&gt;Gradient Descent&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Gradient descent is about finding the parameters W, which lead to minium loss. In practice, deep nets have more millions of parameters. So, it’s very high-dimensional gradient descent. Here’re two simple examples(1D and 2D) to give you an intuition.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;1D:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-155&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.20.32-AM-300x189.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;189&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.20.32-AM-300x189.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.20.32-AM.png 589w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2D:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-154&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.20.44-AM-300x199.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;199&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.20.44-AM-300x199.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.20.44-AM.png 513w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dealing-with-small-datasets&quot;&gt;&lt;span id=&quot;Dealing_with_Small_Datasets&quot;&gt;Dealing with Small Datasets&lt;/span&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Data Augmentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This idea is similar to cross validation but not exactly the same. It maximums the use of datasets. For example, it can be using mirrored versions of images, rotated versions etc. to get larger datasets.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fine Tune&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This one basically means using existing pre-trained neural net. When it’s very hard to train the data, using the existing ones will be a good idea.&lt;/p&gt;

&lt;p&gt;In the end, it’s been a very great course! It covered from the very basic concepts to some higher level approaches, combining theory as well as practice. I would like to use this picture to sum up.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-medium wp-image-156&quot; src=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.46.24-AM-300x195.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;195&quot; srcset=&quot;/wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.46.24-AM-300x195.png 300w, /wp-content/uploads/2017/12/Screen-Shot-2017-12-10-at-1.46.24-AM.png 560w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks, George! Ciao!&lt;/p&gt;</content><author><name>Lucas</name></author><summary type="html">Contents 1 Introduction 2 Exploratory Data Analysis 2.1 Basic Text Analysis 2.2 Feature Vector, Co-Occurrence Analysis, Correlation, Causation 2.3 Visualizing High-Dimensional Vectors 2.4 Clustering with Generative Models 2.4.1 K-Means 2.4.2 Gaussian Mixture Model (GMM) 2.4.3 Dirichlet Process Gaussian Mixture Model (DP-GMM) 2.4.4 CH Index and Gap Statistic 2.5 Hierarchical Clustering 2.5.1 Divisive Clustering 2.5.2 Agglomerative Clustering 2.6 Before You Choose a Clustering Method 2.7 Topic Modeling 3 Predictive Data Analysis 3.1 Classification 3.1.1 kNN 3.1.2 SVM 3.1.3 SVM Kernels 3.1.4 Naive Bayes 3.1.5 Method Evaluation 3.2 Regression 3.2.1 Decision Trees for Classification 3.2.2 Decision Trees for Regression 3.2.3 Random Forest and Extremely Randomized Trees 3.2.4 Boosting 3.3 Deep Learning 3.3.1 Handwritten Digit Demo 3.3.2 Convolutional Neural Network (CNN) 3.3.3 Recurrent Neural Network (RNN) 3.3.4 Gradient Descent 3.3.5 Dealing with Small Datasets</summary></entry><entry><title type="html">Will NEO be the Next Big Thing?</title><link href="https:///Lucas12138.github.io/2017/11/17/will-neo-be-the-next-big-thing/" rel="alternate" type="text/html" title="Will NEO be the Next Big Thing?" /><published>2017-11-17T03:49:21-08:00</published><updated>2017-11-17T03:49:21-08:00</updated><id>https:///Lucas12138.github.io/2017/11/17/will-neo-be-the-next-big-thing</id><content type="html" xml:base="https:///Lucas12138.github.io/2017/11/17/will-neo-be-the-next-big-thing/">&lt;p&gt;NEO, formally known as AntShares, are growing in a significantly high speed.&lt;/p&gt;

&lt;p&gt;AntShares(NEO)’s ICO started on July 9, 2016. When it was started, it’s vision is to be the distributed ledger protocol that digitalizes real-world assets. In 2017Q3, it rebranded to NEO, which aims for smart economy with digital assets, digital identity and smart contract. Many people described it as China’s Ethereum plus Ripple. Not only Chinese investors and Chinese government believe it, but also many overseas investor are pouring heavy investment into it. In only 1 year, it grew from nobody to the 9th in the cryptocurrency capital market.&lt;/p&gt;

&lt;p&gt;From a technology aspect, blockchain is not a new word. It has been there for near 10 years. With the rapid development of information storage technology and computing power, reliable distributed systems with high performance seems to have a chance to make a huge revolution. After Bitcoin, Ethereum came and brought the idea of smart contract, which can make it much easier to build a decentralized applications. However, unfortunately the bar of building a dAPP on Ethereum is relatively high. Its smart contract uses Solidity and it’s obviously not a popular programming language. On the other hand, the security and reliability of Ethereum are doubted frequently after the DAO. NEO also supports smart contract. But the difference is it supports many popular programming languages, such as C#, Java, VB.net etc. This brings a big potential community and lowers the bar to develop dAPPs.&lt;/p&gt;

&lt;p&gt;Speaking of business, there’re many use cases. It can improve workflow and real-time visibility on shipments status, create better performance in asset management, guarantee the safety and reliability in food supply chain and so on. Besides the big blockchain organizations, many big companies are investing in blockchain, like IBM’s Hyperledger and SAP’s Leonardo. NEO started in China, where there’s a great dynamic business market and innovative environment for it to grow fast.&lt;/p&gt;

&lt;p&gt;In terms of policy, it may sounds like a little bit of conspiracy. In late 2017, Chinese government_ _prohibited Bitcoin and many other major cryptocurrencies. Weirdly, Chinese market made up to 90 percent of global Bitcoin trading volume between 2014 and January 2017. While the fiat was happening, Beijing central bank quietly announced that they were working on a blockchain project. I’m not inferring the relationship between NEO and government. Chinese one-party situation does have its positive effect. They make policy and regulation fast and let the things happen fast. There’re evidences like Alibaba, ofo, Mobike etc. They won’t deny the influence of policy from Chinese government.&lt;/p&gt;

&lt;p&gt;I’m not sure about the future of NEO and blockchain. But there’s a satisfying possibility. Correct me if I’m wrong.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://neo.org/&quot;&gt;https://neo.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.neo.org/en-us/sc/introduction.html&quot;&gt;http://docs.neo.org/en-us/sc/introduction.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.bitcoinwiki.org/wiki/Antshares?mobileaction=toggle_view_desktop#Description&quot;&gt;https://en.bitcoinwiki.org/wiki/Antshares?mobileaction=toggle_view_desktop#Description&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://coinmarketcap.com/all/views/all/&quot;&gt;https://coinmarketcap.com/all/views/all/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.investopedia.com/news/china-new-ethereum-neo/&quot;&gt;https://www.investopedia.com/news/china-new-ethereum-neo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@Michael_Spencer/is-bitcoin-a-bubble-2debfe9c6f90&quot;&gt;https://medium.com/@Michael_Spencer/is-bitcoin-a-bubble-2debfe9c6f90&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ibm.com/blogs/internet-of-things/iot-blockchain-use-cases&quot;&gt;https://www.ibm.com/blogs/internet-of-things/iot-blockchain-use-cases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;</content><author><name>Lucas</name></author><summary type="html">NEO, formally known as AntShares, are growing in a significantly high speed.</summary></entry><entry><title type="html">Example: JDBC Good Practice</title><link href="https:///Lucas12138.github.io/2017/11/16/sample-jdbc-good-practice/" rel="alternate" type="text/html" title="Example: JDBC Good Practice" /><published>2017-11-16T05:44:59-08:00</published><updated>2017-11-16T05:44:59-08:00</updated><id>https:///Lucas12138.github.io/2017/11/16/sample-jdbc-good-practice</id><content type="html" xml:base="https:///Lucas12138.github.io/2017/11/16/sample-jdbc-good-practice/">&lt;p&gt;Suppose we are using MySQL on AWS RDS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Lucas12138/JDBC-good-practice&quot;&gt;Github Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There could be three classes as follows:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ConnectionManager:&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;brush: java; title: ; notranslate&quot; title=&quot;&quot;&gt;import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class ConnectionManager {

private static ConnectionManager instance = null;

private final String USERNAME = &quot;*****&quot;;

private final String PASSWORD = &quot;*****&quot;;

private final String M_CONN_STRING
= &quot;jdbc:mysql://rds-mysql-t*******************.amazonaws.com:3306/&quot;;

private final String DBNAME = &quot;*****&quot;;

private Connection conn = null;

private ConnectionManager() {
}

public static ConnectionManager getInstance() {
if (instance == null) {
instance = new ConnectionManager();
}
return instance;
}

private boolean openConnection() {
try {
conn = DriverManager.getConnection(M_CONN_STRING + DBNAME, USERNAME, PASSWORD);
return true;
} catch (SQLException e) {
System.err.println(e);
return false;
}

}

public Connection getConnection() {
if (conn == null) {
if (openConnection()) {
System.out.println(&quot;Connection opened&quot;);
return conn;
} else {
return null;
}
}
return conn;
}

public void close() {
System.out.println(&quot;Closing connection&quot;);
try {
conn.close();
conn = null;
} catch (Exception e) {
}
}

}

&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Admin:&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;brush: java; title: ; notranslate&quot; title=&quot;&quot;&gt;import java.io.Serializable;

public class Admin implements Serializable {

// becoming java beans, not useful in simple client application though
private static final long serialVersionUID = -5169442789450234938L;
private int adminId;
private String userName;
private String password;

public int getAdminId() {
return adminId;
}

public void setAdminId(int adminId) {
this.adminId = adminId;
}

public String getUserName() {
return userName;
}

public void setUserName(String userName) {
this.userName = userName;
}

public String getPassword() {
return password;
}

public void setPassword(String password) {
this.password = password;
}

}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;AdminManager:&lt;/strong&gt;&lt;/p&gt;

&lt;pre class=&quot;brush: java; title: ; notranslate&quot; title=&quot;&quot;&gt;import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class AdminManager {

private static Connection conn = ConnectionManager.getInstance().getConnection();

public static void displayAllRows() throws SQLException {
String sql = &quot;select adminId, userName, password from admin&quot;;
try (Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql);) {
System.out.println(&quot;Admin table: &quot;);
while (rs.next()) {
StringBuffer bf = new StringBuffer();
bf.append(rs.getInt(&quot;adminId&quot;) + &quot;: &quot;);
bf.append(rs.getString(&quot;userName&quot;) + &quot;, &quot;);
bf.append(rs.getString(&quot;password&quot;));
System.out.println(bf.toString());

}
}
}

public static Admin getRow(int adminId) throws SQLException {
String sql = &quot;select * from admin where adminId = ?&quot;;
ResultSet rs = null;
try (PreparedStatement stmt = conn.prepareStatement(sql);) {
stmt.setInt(1, adminId);
rs = stmt.executeQuery();

if (rs.next()) {
Admin bean = new Admin();
bean.setAdminId(adminId);
bean.setUserName(rs.getString(&quot;userName&quot;));
bean.setPassword(rs.getString(&quot;password&quot;));
return bean;
} else {
System.err.println(&quot;No rows were found&quot;);
return null;
}

}
}

public static boolean insert(Admin bean) throws SQLException {
String sql = &quot;insert into admin (userName, password) &quot; + &quot;values(?, ?)&quot;;
ResultSet keys = null;

try (PreparedStatement stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);) {
stmt.setString(1, bean.getUserName());
stmt.setString(2, bean.getPassword());
int affected = stmt.executeUpdate();
if (affected == 1) {
keys = stmt.getGeneratedKeys();
keys.next();
int newKey = keys.getInt(1);
bean.setAdminId(newKey);

} else {
System.err.println(&quot;No rows affected&quot;);
return false;
}

} catch (SQLException e) {
System.err.println(e);
return false;
} finally {
if (keys != null) {
keys.close();
}
}
return true;
}

public static boolean update(Admin bean) throws SQLException {
String sql = &quot;update admin set &quot; + &quot;userName = ?, password = ? &quot; + &quot;where adminId = ?&quot;;
try (PreparedStatement stmt = conn.prepareStatement(sql);) {
stmt.setString(1, bean.getUserName());
stmt.setString(2, bean.getPassword());
stmt.setInt(3, bean.getAdminId());
int affected = stmt.executeUpdate();
if (affected == 1) {
return true;
} else {
return false;
}

} catch (SQLException e) {
System.err.println(e);
return false;
}
}

public static boolean update2(Admin bean) throws SQLException {
// Not as efficient as the first one
String sql = &quot;select * from admin where adminId = ?&quot;;
ResultSet rs = null;
try (PreparedStatement stmt = conn.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE,
ResultSet.CONCUR_UPDATABLE);) {

stmt.setInt(1, bean.getAdminId());

rs = stmt.executeQuery();

if (rs.next()) {
rs.updateString(&quot;userName&quot;, bean.getUserName());
rs.updateString(&quot;password&quot;, bean.getPassword());
rs.updateRow();
return true;
} else {
return false;
}

} catch (SQLException e) {
System.err.println(e);
return false;
} finally {
if (rs != null) {
rs.close();
}
}
}

public static boolean delete(int adminId) throws SQLException {
String sql = &quot;delete from admin where adminId = ?&quot;;
try (PreparedStatement stmt = conn.prepareStatement(sql);) {
stmt.setInt(1, adminId);
int affected = stmt.executeUpdate();
if (affected == 1) {
return true;
} else {
return false;
}
} catch (SQLException e) {
System.err.println(e);
return false;
}
}
}
&lt;/pre&gt;</content><author><name>Lucas</name></author><summary type="html">Suppose we are using MySQL on AWS RDS.</summary></entry><entry><title type="html">Example: Sending Email</title><link href="https:///Lucas12138.github.io/2017/11/15/sample-sending-email/" rel="alternate" type="text/html" title="Example: Sending Email" /><published>2017-11-15T01:03:53-08:00</published><updated>2017-11-15T01:03:53-08:00</updated><id>https:///Lucas12138.github.io/2017/11/15/sample-sending-email</id><content type="html" xml:base="https:///Lucas12138.github.io/2017/11/15/sample-sending-email/">&lt;p&gt;This is a sample template with the method of sending email.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Lucas12138/Sending-Email&quot;&gt;Github Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Prerequisite: JavaMail&lt;/em&gt;&lt;/p&gt;

&lt;pre class=&quot;brush: java; title: ; notranslate&quot; title=&quot;&quot;&gt;import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class SampleSendingEmail {

public static void sendMail() {
 final String username = &quot;--from@gmail.com--&quot;;
 final String password = &quot;--password--&quot;;

Properties props = new Properties();
 props.put(&quot;mail.smtp.starttls.enable&quot;, &quot;true&quot;);
 props.put(&quot;mail.smtp.auth&quot;, &quot;true&quot;);
 props.put(&quot;mail.smtp.host&quot;, &quot;smtp.gmail.com&quot;);
 props.put(&quot;mail.smtp.port&quot;, &quot;587&quot;);

Session session = Session.getInstance(props,
 new javax.mail.Authenticator() {
 protected PasswordAuthentication getPasswordAuthentication() {
 return new PasswordAuthentication(username, password);
 }
 });

try {

Message message = new MimeMessage(session);
 message.setFrom(new InternetAddress(&quot;--from@gmail.com--&quot;));
 message.setRecipients(Message.RecipientType.TO,
 InternetAddress.parse(&quot;--to@gmail.com--&quot;));
 message.setSubject(&quot;Hello World&quot;);
 message.setText(&quot;Test&quot;);

Transport.send(message);

System.out.println(&quot;Done&quot;);

} catch (MessagingException e) {
 throw new RuntimeException(e);
 }
 }

public static void main(String[] args) {
 sendMail();

 }
}

&lt;/pre&gt;</content><author><name>Lucas</name></author><summary type="html">This is a sample template with the method of sending email.</summary></entry><entry><title type="html">Tips of MySQL</title><link href="https:///Lucas12138.github.io/2017/11/15/tips-of-mysql/" rel="alternate" type="text/html" title="Tips of MySQL" /><published>2017-11-14T20:47:46-08:00</published><updated>2017-11-14T20:47:46-08:00</updated><id>https:///Lucas12138.github.io/2017/11/15/tips-of-mysql</id><content type="html" xml:base="https:///Lucas12138.github.io/2017/11/15/tips-of-mysql/">&lt;ul&gt;
  &lt;li&gt;If you want to select limit rows which start after specific row, try this:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select * from table order by name limit 5 offset 5; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To select columns and display them as other names:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select name as country, population as pop from country order by name; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sorting results by specific columns (sort the column first which is the closest to the order by, DESC is the keyword for descending order):&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select name, region from country order by region desc, name desc; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using LIKE keyword (uppercase and lowercase are treated the same):&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select name, population from country where name like '%island%' order by name; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you want to use a single quote to the table, eg. O’ Brien, try this:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select * from table where name = 'O'' Brien'; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;‘%’ is a wildcard for multiple characters and ‘_’ is a wildcard for single character.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To select rows which contain specific values, we can use IN keyword:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select * from country where continent in ('Europe', 'Asia'); &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We can use logic expression like OR, AND, NOT. after WHERE expression.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Except LIKE and IN, we can also filter results by REGEXP: &lt;a href=&quot;http://www.runoob.com/mysql/mysql-regexp.html&quot;&gt;MySQL REGEXP Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Assuming test has 3 columns (a, b, c), we can insert results of a query into the test table:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;insert into test(a, b, c) select id, name, description from item; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Updating the table:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;update test set c = &quot;Hello World&quot; where a = 1; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deleting a row from the table:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;delete from test where a = 2; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deleting all the rows of the table:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;truncate table test; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deleting the table (everything! including the metadata):&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop table test; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using DISTINCT keyword to avoid duplicate results:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select name from test; &lt;/pre&gt;

&lt;p&gt;vs.&lt;/p&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select distinct name from test &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To select rows with NULL, we can only use IS keyword:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select * from test where a is null; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating a database, opening and switching to that database (then create a table and insert some values) :&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;create database foo;

-- switching to the database

use foo;

create table bar (a int, b text);

insert into bar values (1, 'bar');

select * from bar; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deleting a database:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop database foo; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating a table and showing the details of it:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;-- use innodb if you can

-- charset will influence the collation which is the rule for comparing and sorting data

create table test (

id integer,

name varchar(255),

zip char(10)

) engine = Innodb default charset = utf8;



-- the next line is a mysql specific statement

-- it will show the table's details

describe test;



-- show all the tables' details in the database

show table status;



-- select the table test using LIKE

show table status like 'test';

&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;It is a good pratice to use IF EXISTS keyword:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop table if exists test; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Index is one of the constraints of SQL:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To show the indexes of a table:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;show indexes from test; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating indexes while creating the table:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop table if exists test;

create table test(

id integer,

a varchar(255),

b varchar(255),

index ab (a, b)

-- key name will be ab

);

show indexes from test; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using indexes can speed up the looking up process, but it should be used correctly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/pang040328/article/details/4164874&quot;&gt;SQL Indexes Pros &amp;amp; Cons (When to use indexes)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/xxiaoye/p/3679899.html&quot;&gt;Why indexes can speed up the process? (Including some introductions to indexes)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using not null and setting default values:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop table if exists test;

create table test(

-- auto_increment will increase the id while inserting items

id integer auto_increment not null default 47,

a varchar(255)

) &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Primary key will include the not null and unique by design.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Foreign key example:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;create table orders(

orderid int not null,

ordernumber int not null,

personid int,

primary key (orderid),

foreign key (personid) references persons(personid)

) &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To be more specific: &lt;a href=&quot;https://www.w3schools.com/sql/sql_constraints.asp&quot;&gt;SQL Constraints&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Selecting the last id that was inserted into the database:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select last_insert_id(); &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To manipulate the columns of a table, we can use ALTER keyword:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;alter table test add d varchar(10);

alter table test drop d;

-- we can also decide the position of the added column

alter table test add b varchar(10) after a; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL supports 3 fundamental data types: Numeric, String, Dates and Times.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It also supports special types like Boolean, Enumerations and Sets.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To check the timezone of current database system (including setting time zone) :&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;Time Zone List&lt;/a&gt;&lt;/p&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;show variables like '%time_zone%';

-- display current timestamp

select now();

&amp;nbsp;

-- to set the time zone to us eastern

set time_zone = 'US/Eastern'; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bit:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop table if exists test;

create table test (

id serial,

a bit(3),

b bit(5)

); &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Boolean:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop table if exists test;

create table test (

a boolean,

b boolean

); &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Enumeration:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;drop table if exists test;

create table test (

id serial,

a enum( 'A', 'B', 'C')

);

insert into test (a) values ('A');

insert into test (a) values ('B');

insert into test (a) values ('C');

-- which is equal to the following

insert into test (a) values (1);

insert into test (a) values (2);

insert into test (a) values (3); &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;-- it is similar to enumeration but it can insert multiple values

drop table if exists test;

create table test (

id serial,

a set( 'A', 'B', 'C')

);

insert into test (a) values ('A');

insert into test (a) values ('A', 'B');

insert into test (a) values ('A', 'B', 'C');

-- set is using bits to represent the index

-- the following will have the same result

insert into test (a) values (1); -- which is 001

insert into test (a) values (3); -- which is 011

insert into test (a) values (7); -- which is 111 &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Maximum storage per row: 65,535 bytes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Some functions for string:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;-- LEFT, RIGHT, MID

select name, left(name, 3), right(name, 3), mid(name, 2, 3) from country;

&amp;nbsp;

-- CONCAT

select concat(name, ', ', localname) from country;

&amp;nbsp;

-- CONCAT_WS: concat with sperator

select concat_ws(', ', name, localname, region, continent) from country;

&amp;nbsp;

-- LOCATE: locate the first string's position in the second parameter

select name, locate('island', name) from country where name like '%island%';

&amp;nbsp;

-- UPPER, LOWER, REVERSE

select name, upper(name) from country; &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Aggregate functions like COUNT and GROUP BY keyword:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre class=&quot;brush: sql; title: ; notranslate&quot; title=&quot;&quot;&gt;select continent, count(*) as count from country group by continent order by count desc;

-- There are also some other aggregate functions, like GROUP_CONCAT, AVG, MIN, MAX, SUM, STD... &lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We can use CASE keyword for flow control.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using transection, the time spent on the processes will be much less and we can choose to COMMIT or ROLLBACK the transations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using triggers, we can add some logic to a table BEFOR or AFTER some specifc processes happen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SQL Stored Routines:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stored FUNCTION&lt;/p&gt;

&lt;p&gt;Stored PROCEDURE&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;</content><author><name>Lucas</name></author><summary type="html">If you want to select limit rows which start after specific row, try this:</summary></entry></feed>